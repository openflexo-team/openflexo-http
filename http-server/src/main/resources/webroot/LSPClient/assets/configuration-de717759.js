import{mF as Ot,fD as ue,mG as x,mH as w,mI as Ut,mJ as at,er as Z,_ as M,a as f,aQ as Te,bA as T,aV as Le,mK as B,g as I,b as At,f as ct,L as ut,bM as xt,cx as Mt,h as pe,mL as Ne,ct as Tt,cu as Ve,kk as Lt,mM as Nt,B as u,bT as Y,mN as zt,a3 as W,cA as F,mO as Q,z as re,mP as ht,dT as jt,mQ as Vt,mR as Kt,ic as lt,D as S,E as k,o as Ke,mS as $t,bd as ze,dE as $e,a2 as R,t as qt,w as dt,mT as ft,d as Ht,mU as Bt,fi as gt,ap as q,ao as te,eR as pt,a1 as Gt,cy as Ct,iB as Jt,mV as Yt,mW as wt,mX as Xt,mY as G,mZ as L,m_ as _,m$ as qe,n0 as J,n1 as kt,n2 as Qt,n3 as Zt,n4 as He,n5 as ei,n6 as ti,n7 as ii,bE as O,n8 as ee,U as A,n9 as he,na as ri,nb as Se,nc as St,nd as vt,ne as ve,nf as si,fk as Be,di as ni,ng as N,nh as oi,ni as ai,nj as ie,nk as z,nl as Ge,e_ as ci,nm as ui,nn as hi,no as li,I as di,bC as fi,np as gi,e0 as pi,nq as mt,N as yt,nr as Je,S as P,iz as Ci,ns as wi,nt as ki,fj as Wt,dr as U,ex as Si,el as me,dh as vi,nu as _t,nv as De,fu as ne,dl as le,nw as K,da as mi,nx as yi,aU as bt,ny as Wi,bF as ye,bG as _i,nz as bi,nA as Ri,bO as Di,by as Rt,f3 as Pi,bD as Fi,bx as Ei,nB as Ii,nC as Oi,nD as Ui,nE as Ai,nF as Ye,nG as xi,au as Mi,nH as Xe,iA as Dt,ie as Pe,nI as Ti,nJ as Li,jA as H,nK as Ni,nL as zi,nM as ji,bB as Vi,k as j,dd as Ki,gd as $i,jO as qi,nN as Hi,e as Bi,aD as Gi}from"./index-1e6bb64c.js";import{T as b,L as V,a as Ji,F as Pt,b as Yi,U as Xi,W as Qi,R as We,c as oe,d as Fe,e as Zi,u as er,p as tr,m as ir,w as Ee,f as Qe,g as rr,h as sr,i as nr,P as or,I as ar,l as cr,t as ur}from"./configuration-10295f44.js";import{u as hr}from"./settingsMerge-7207fb1e.js";class de extends x{constructor(e){super(e),this._folders=[],this._transient=!1,this._settingsModelParser=new x(e),this._launchModel=new w,this._tasksModel=new w}get folders(){return this._folders}get transient(){return this._transient}get settingsModel(){return this._settingsModelParser.configurationModel}get launchModel(){return this._launchModel}get tasksModel(){return this._tasksModel}reparseWorkspaceSettings(e){this._settingsModelParser.reparse(e)}getRestrictedWorkspaceSettings(){return this._settingsModelParser.restrictedConfigurations}doParseRaw(e,t){return this._folders=e.folders||[],this._transient=Ut(e.transient)&&e.transient,this._settingsModelParser.parseRaw(e.settings,t),this._launchModel=this.createConfigurationModelFrom(e,"launch"),this._tasksModel=this.createConfigurationModelFrom(e,"tasks"),super.doParseRaw(e,t)}createConfigurationModelFrom(e,t){const i=e[t];if(i){const r=at(i,o=>console.error(`Conflict in settings file ${this._name}: ${o}`)),n=Object.create(null);n[t]=r;const s=Object.keys(i).map(o=>`${t}.${o}`);return new w(n,s,[])}return new w}}class Ft extends x{constructor(e,t){super(e),this.scope=t}doParseRaw(e,t){const i=at(e,s=>console.error(`Conflict in settings file ${this._name}: ${s}`)),r=Object.create(null);r[this.scope]=i;const n=Object.keys(e).map(s=>`${this.scope}.${s}`);return{contents:r,keys:n,overrides:[]}}}class Ze extends Ot{constructor(e,t,i,r,n,s,o,a,c,h){super(e,t,i,r,n,s,o,a,c),this._workspace=h}getValue(e,t={}){return super.getValue(e,t,this._workspace)}inspect(e,t={}){return super.inspect(e,t,this._workspace)}keys(){return super.keys(this._workspace)}compareAndDeleteFolderConfiguration(e){return this._workspace&&this._workspace.folders.length>0&&this._workspace.folders[0].uri.toString()===e.toString()?{keys:[],overrides:[]}:super.compareAndDeleteFolderConfiguration(e)}compare(e){const t=(s,o,a)=>{const c=[];return c.push(...o.filter(h=>s.indexOf(h)===-1)),c.push(...s.filter(h=>o.indexOf(h)===-1)),c.push(...s.filter(h=>o.indexOf(h)===-1?!1:Z(this.getValue(h,{overrideIdentifier:a}),e.getValue(h,{overrideIdentifier:a}))?this._workspace&&this._workspace.folders.some(l=>!Z(this.getValue(h,{resource:l.uri,overrideIdentifier:a}),e.getValue(h,{resource:l.uri,overrideIdentifier:a}))):!0)),c},i=t(this.allKeys(),e.allKeys()),r=[],n=ue([...this.allOverrideIdentifiers(),...e.allOverrideIdentifiers()]);for(const s of n){const o=t(this.getAllKeysForOverrideIdentifier(s),e.getAllKeysForOverrideIdentifier(s),s);o.length&&r.push([s,o])}return{keys:i,overrides:r}}}class lr extends Error{constructor(e,t){super(e),this.code=t}}let Ie=class{constructor(e,t,i,r,n,s,o,a,c,h,l,p){this.remoteSettingsResource=e,this.configurationService=t,this.contextService=i,this.userDataProfileService=r,this.userDataProfilesService=n,this.fileService=s,this.textModelResolverService=o,this.textFileService=a,this.notificationService=c,this.preferencesService=h,this.editorService=l,this.uriIdentityService=p,this.queue=new Ne}async writeConfiguration(e,t,i={}){const r=this.getConfigurationEditOperation(e,t,i.scopes||{});return this.queue.queue(async()=>{try{await this.doWriteConfiguration(r,i)}catch(n){if(i.donotNotifyError)throw n;await this.onError(n,r,i.scopes)}})}async doWriteConfiguration(e,t){await this.validate(e.target,e,!t.handleDirtyFile,t.scopes||{});const i=e.resource,r=await this.resolveModelReference(i);try{const n=this.getFormattingOptions(r.object.textEditorModel);await this.updateConfiguration(e,r.object.textEditorModel,n,t)}finally{r.dispose()}}async updateConfiguration(e,t,i,r){if(this.hasParseErrors(t.getValue(),e))throw this.toConfigurationEditingError(11,e.target,e);if(this.textFileService.isDirty(t.uri)&&r.handleDirtyFile)switch(r.handleDirtyFile){case"save":await this.save(t,e);break;case"revert":await this.textFileService.revert(t.uri);break}const n=this.getEdits(e,t.getValue(),i)[0];n&&this.applyEditsToBuffer(n,t)&&await this.save(t,e)}async save(e,t){try{await this.textFileService.save(e.uri,{ignoreErrorHandler:!0})}catch(i){throw i.fileOperationResult===3?this.toConfigurationEditingError(10,t.target,t):this.toConfigurationEditingError(13,t.target,t)}}applyEditsToBuffer(e,t){const i=t.getPositionAt(e.offset),r=t.getPositionAt(e.offset+e.length),n=new Tt(i.lineNumber,i.column,r.lineNumber,r.column),s=t.getValueInRange(n);if(e.content!==s){const o=s?Ve.replace(n,e.content):Ve.insert(i,e.content);return t.pushEditOperations([new Lt(i.lineNumber,i.column,i.lineNumber,i.column)],[o],()=>[]),!0}return!1}getEdits({value:e,jsonPath:t},i,r){return t.length?Nt(i,t,e,r):[{content:JSON.stringify(e,null,r.insertSpaces&&r.tabSize?" ".repeat(r.tabSize):"	"),length:i.length,offset:0}]}getFormattingOptions(e){const{insertSpaces:t,tabSize:i}=e.getOptions(),r=e.getEOL();return{insertSpaces:t,tabSize:i,eol:r}}async onError(e,t,i){switch(e.code){case 11:this.onInvalidConfigurationError(e,t);break;case 9:this.onConfigurationFileDirtyError(e,t,i);break;case 10:return this.doWriteConfiguration(t,{scopes:i,handleDirtyFile:"revert"});default:this.notificationService.error(e.message)}}onInvalidConfigurationError(e,t){const i=t.workspaceStandAloneConfigurationKey===b?u("openTasksConfiguration","Open Tasks Configuration"):t.workspaceStandAloneConfigurationKey===V?u("openLaunchConfiguration","Open Launch Configuration"):null;i?this.notificationService.prompt(Y.Error,e.message,[{label:i,run:()=>this.openFile(t.resource)}]):this.notificationService.prompt(Y.Error,e.message,[{label:u("open","Open Settings"),run:()=>this.openSettings(t)}])}onConfigurationFileDirtyError(e,t,i){const r=t.workspaceStandAloneConfigurationKey===b?u("openTasksConfiguration","Open Tasks Configuration"):t.workspaceStandAloneConfigurationKey===V?u("openLaunchConfiguration","Open Launch Configuration"):null;r?this.notificationService.prompt(Y.Error,e.message,[{label:u("saveAndRetry","Save and Retry"),run:()=>{const n=t.key?`${t.workspaceStandAloneConfigurationKey}.${t.key}`:t.workspaceStandAloneConfigurationKey;this.writeConfiguration(t.target,{key:n,value:t.value},{handleDirtyFile:"save",scopes:i})}},{label:r,run:()=>this.openFile(t.resource)}]):this.notificationService.prompt(Y.Error,e.message,[{label:u("saveAndRetry","Save and Retry"),run:()=>this.writeConfiguration(t.target,{key:t.key,value:t.value},{handleDirtyFile:"save",scopes:i})},{label:u("open","Open Settings"),run:()=>this.openSettings(t)}])}openSettings(e){const t={jsonEditor:!0};switch(e.target){case 1:this.preferencesService.openUserSettings(t);break;case 2:this.preferencesService.openRemoteSettings(t);break;case 3:this.preferencesService.openWorkspaceSettings(t);break;case 4:if(e.resource){const i=this.contextService.getWorkspaceFolder(e.resource);i&&this.preferencesService.openFolderSettings({folderUri:i.uri,jsonEditor:!0})}break}}openFile(e){this.editorService.openEditor({resource:e,options:{pinned:!0}})}toConfigurationEditingError(e,t,i){const r=this.toErrorMessage(e,t,i);return new lr(r,e)}toErrorMessage(e,t,i){switch(e){case 12:return u("errorPolicyConfiguration","Unable to write {0} because it is configured in system policy.",i.key);case 0:return u("errorUnknownKey","Unable to write to {0} because {1} is not a registered configuration.",this.stringifyTarget(t),i.key);case 1:return u("errorInvalidWorkspaceConfigurationApplication","Unable to write {0} to Workspace Settings. This setting can be written only into User settings.",i.key);case 2:return u("errorInvalidWorkspaceConfigurationMachine","Unable to write {0} to Workspace Settings. This setting can be written only into User settings.",i.key);case 3:return u("errorInvalidFolderConfiguration","Unable to write to Folder Settings because {0} does not support the folder resource scope.",i.key);case 4:return u("errorInvalidUserTarget","Unable to write to User Settings because {0} does not support for global scope.",i.key);case 5:return u("errorInvalidWorkspaceTarget","Unable to write to Workspace Settings because {0} does not support for workspace scope in a multi folder workspace.",i.key);case 6:return u("errorInvalidFolderTarget","Unable to write to Folder Settings because no resource is provided.");case 7:return u("errorInvalidResourceLanguageConfiguration","Unable to write to Language Settings because {0} is not a resource language setting.",i.key);case 8:return u("errorNoWorkspaceOpened","Unable to write to {0} because no workspace is opened. Please open a workspace first and try again.",this.stringifyTarget(t));case 11:{if(i.workspaceStandAloneConfigurationKey===b)return u("errorInvalidTaskConfiguration","Unable to write into the tasks configuration file. Please open it to correct errors/warnings in it and try again.");if(i.workspaceStandAloneConfigurationKey===V)return u("errorInvalidLaunchConfiguration","Unable to write into the launch configuration file. Please open it to correct errors/warnings in it and try again.");switch(t){case 1:return u("errorInvalidConfiguration","Unable to write into user settings. Please open the user settings to correct errors/warnings in it and try again.");case 2:return u("errorInvalidRemoteConfiguration","Unable to write into remote user settings. Please open the remote user settings to correct errors/warnings in it and try again.");case 3:return u("errorInvalidConfigurationWorkspace","Unable to write into workspace settings. Please open the workspace settings to correct errors/warnings in the file and try again.");case 4:{let r="<<unknown>>";if(i.resource){const n=this.contextService.getWorkspaceFolder(i.resource);n&&(r=n.name)}return u("errorInvalidConfigurationFolder","Unable to write into folder settings. Please open the '{0}' folder settings to correct errors/warnings in it and try again.",r)}default:return""}}case 9:{if(i.workspaceStandAloneConfigurationKey===b)return u("errorTasksConfigurationFileDirty","Unable to write into tasks configuration file because the file has unsaved changes. Please save it first and then try again.");if(i.workspaceStandAloneConfigurationKey===V)return u("errorLaunchConfigurationFileDirty","Unable to write into launch configuration file because the file has unsaved changes. Please save it first and then try again.");switch(t){case 1:return u("errorConfigurationFileDirty","Unable to write into user settings because the file has unsaved changes. Please save the user settings file first and then try again.");case 2:return u("errorRemoteConfigurationFileDirty","Unable to write into remote user settings because the file has unsaved changes. Please save the remote user settings file first and then try again.");case 3:return u("errorConfigurationFileDirtyWorkspace","Unable to write into workspace settings because the file has unsaved changes. Please save the workspace settings file first and then try again.");case 4:{let r="<<unknown>>";if(i.resource){const n=this.contextService.getWorkspaceFolder(i.resource);n&&(r=n.name)}return u("errorConfigurationFileDirtyFolder","Unable to write into folder settings because the file has unsaved changes. Please save the '{0}' folder settings file first and then try again.",r)}default:return""}}case 10:if(i.workspaceStandAloneConfigurationKey===b)return u("errorTasksConfigurationFileModifiedSince","Unable to write into tasks configuration file because the content of the file is newer.");if(i.workspaceStandAloneConfigurationKey===V)return u("errorLaunchConfigurationFileModifiedSince","Unable to write into launch configuration file because the content of the file is newer.");switch(t){case 1:return u("errorConfigurationFileModifiedSince","Unable to write into user settings because the content of the file is newer.");case 2:return u("errorRemoteConfigurationFileModifiedSince","Unable to write into remote user settings because the content of the file is newer.");case 3:return u("errorConfigurationFileModifiedSinceWorkspace","Unable to write into workspace settings because the content of the file is newer.");case 4:return u("errorConfigurationFileModifiedSinceFolder","Unable to write into folder settings because the content of the file is newer.")}case 13:return u("errorUnknown","Unable to write to {0} because of an internal error.",this.stringifyTarget(t))}}stringifyTarget(e){switch(e){case 1:return u("userTarget","User Settings");case 2:return u("remoteUserTarget","Remote User Settings");case 3:return u("workspaceTarget","Workspace Settings");case 4:return u("folderTarget","Folder Settings");default:return""}}defaultResourceValue(e){const t=this.uriIdentityService.extUri.basename(e);switch(t.substr(0,t.length-this.uriIdentityService.extUri.extname(e).length)){case b:return Ji;default:return"{}"}}async resolveModelReference(e){return await this.fileService.exists(e)||await this.textFileService.write(e,this.defaultResourceValue(e),{encoding:"utf8"}),this.textModelResolverService.createModelReference(e)}hasParseErrors(e,t){if(t.workspaceStandAloneConfigurationKey&&!t.key)return!1;const i=[];return zt(e,i,{allowTrailingComma:!0,allowEmptyContent:!0}),i.length>0}async validate(e,t,i,r){var o,a;if(this.configurationService.inspect(t.key).policyValue!==void 0)throw this.toConfigurationEditingError(12,e,t);const s=(o=W.as(F.Configuration).getConfigurationProperties()[t.key])==null?void 0:o.scope;if(!t.workspaceStandAloneConfigurationKey&&this.configurationService.keys().default.indexOf(t.key)<0&&!Q.test(t.key)&&t.value!==void 0)throw this.toConfigurationEditingError(0,e,t);if(t.workspaceStandAloneConfigurationKey&&t.workspaceStandAloneConfigurationKey!==b&&(e===1||e===2))throw this.toConfigurationEditingError(4,e,t);if((e===3||e===4)&&this.contextService.getWorkbenchState()===1)throw this.toConfigurationEditingError(8,e,t);if(e===3&&!t.workspaceStandAloneConfigurationKey&&!Q.test(t.key)){if(s===1)throw this.toConfigurationEditingError(1,e,t);if(s===2)throw this.toConfigurationEditingError(2,e,t)}if(e===4){if(!t.resource)throw this.toConfigurationEditingError(6,e,t);if(!t.workspaceStandAloneConfigurationKey&&!Q.test(t.key)&&s!==void 0&&!Pt.includes(s))throw this.toConfigurationEditingError(3,e,t)}if((a=r.overrideIdentifiers)!=null&&a.length&&s!==5)throw this.toConfigurationEditingError(7,e,t);if(!t.resource)throw this.toConfigurationEditingError(6,e,t);if(i&&this.textFileService.isDirty(t.resource))throw this.toConfigurationEditingError(9,e,t)}getConfigurationEditOperation(e,t,i){var c,h;if(t.key){const l=e===1?Xi:Qi,p=Object.keys(l);for(const v of p){const D=this.getConfigurationFileResource(e,v,l[v],i.resource,void 0);if(t.key===v){const y=this.isWorkspaceConfigurationResource(D)?[v]:[];return{key:y[y.length-1],jsonPath:y,value:t.value,resource:re(D),workspaceStandAloneConfigurationKey:v,target:e}}const E=`${v}.`;if(t.key.indexOf(E)===0){const y=this.isWorkspaceConfigurationResource(D)?[v,t.key.substr(E.length)]:[t.key.substr(E.length)];return{key:y[y.length-1],jsonPath:y,value:t.value,resource:re(D),workspaceStandAloneConfigurationKey:v,target:e}}}}const r=t.key,s=(c=W.as(F.Configuration).getConfigurationProperties()[r])==null?void 0:c.scope;let o=(h=i.overrideIdentifiers)!=null&&h.length?[ht(i.overrideIdentifiers),r]:[r];if(e===1||e===2)return{key:r,jsonPath:o,value:t.value,resource:re(this.getConfigurationFileResource(e,void 0,"",null,s)),target:e};const a=this.getConfigurationFileResource(e,void 0,Yi,i.resource,s);return this.isWorkspaceConfigurationResource(a)&&(o=["settings",...o]),{key:r,jsonPath:o,value:t.value,resource:re(a),target:e}}isWorkspaceConfigurationResource(e){const t=this.contextService.getWorkspace();return!!(t.configuration&&e&&t.configuration.fsPath===e.fsPath)}getConfigurationFileResource(e,t,i,r,n){if(e===1)return t===b?this.userDataProfileService.currentProfile.tasksResource:n===1&&!this.userDataProfileService.currentProfile.isDefault?this.userDataProfilesService.defaultProfile.settingsResource:this.userDataProfileService.currentProfile.settingsResource;if(e===2)return this.remoteSettingsResource;const s=this.contextService.getWorkbenchState();if(s!==1){const o=this.contextService.getWorkspace();if(e===3){if(s===3)return jt(o.configuration);if(s===2)return o.folders[0].toResource(i)}if(e===4&&r){const a=this.contextService.getWorkspaceFolder(r);if(a)return a.toResource(i)}}return null}};Ie=M([f(1,Te),f(2,T),f(3,Le),f(4,B),f(5,I),f(6,At),f(7,ct),f(8,ut),f(9,xt),f(10,Mt),f(11,pe)],Ie);class $ extends Vt{constructor(e,t){var i;super(),this.configurationCache=e,this.configurationRegistry=W.as(F.Configuration),this.cachedConfigurationDefaultsOverrides={},this.cacheKey={type:"defaults",key:"configurationDefaultsOverrides"},this.updateCache=!1,(i=t.options)!=null&&i.configurationDefaults&&this.configurationRegistry.registerDefaultConfigurations([{overrides:t.options.configurationDefaults}])}getConfigurationDefaultOverrides(){return this.cachedConfigurationDefaultsOverrides}async initialize(){return await this.initializeCachedConfigurationDefaultsOverrides(),super.initialize()}reload(){return this.updateCache=!0,this.cachedConfigurationDefaultsOverrides={},this.updateCachedConfigurationDefaultsOverrides(),super.reload()}hasCachedConfigurationDefaultsOverrides(){return!Kt(this.cachedConfigurationDefaultsOverrides)}initializeCachedConfigurationDefaultsOverrides(){return this.initiaizeCachedConfigurationDefaultsOverridesPromise||(this.initiaizeCachedConfigurationDefaultsOverridesPromise=(async()=>{try{if(window.localStorage.getItem($.DEFAULT_OVERRIDES_CACHE_EXISTS_KEY)){const e=await this.configurationCache.read(this.cacheKey);e&&(this.cachedConfigurationDefaultsOverrides=JSON.parse(e))}}catch{}this.cachedConfigurationDefaultsOverrides=lt(this.cachedConfigurationDefaultsOverrides)?this.cachedConfigurationDefaultsOverrides:{}})()),this.initiaizeCachedConfigurationDefaultsOverridesPromise}onDidUpdateConfiguration(e,t){super.onDidUpdateConfiguration(e,t),t&&this.updateCachedConfigurationDefaultsOverrides()}async updateCachedConfigurationDefaultsOverrides(){if(!this.updateCache)return;const e={},t=this.configurationRegistry.getConfigurationDefaultsOverrides();for(const[i,r]of t)!Q.test(i)&&r.value!==void 0&&(e[i]=r.value);try{Object.keys(e).length?(window.localStorage.setItem($.DEFAULT_OVERRIDES_CACHE_EXISTS_KEY,"yes"),await this.configurationCache.write(this.cacheKey,JSON.stringify(e))):(window.localStorage.removeItem($.DEFAULT_OVERRIDES_CACHE_EXISTS_KEY),await this.configurationCache.remove(this.cacheKey))}catch{}}}$.DEFAULT_OVERRIDES_CACHE_EXISTS_KEY="DefaultOverridesCacheExists";class et extends S{get hasTasksLoaded(){return this.userConfiguration.value instanceof fe}constructor(e,t,i,r,n,s){super(),this.settingsResource=e,this.tasksResource=t,this.fileService=r,this.uriIdentityService=n,this.logService=s,this._onDidChangeConfiguration=this._register(new k),this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this.userConfiguration=this._register(new Ke),this.userConfigurationChangeDisposable=this._register(new Ke),this.configurationParseOptions={scopes:i,skipRestricted:!1},this.userConfiguration.value=new $t(e,i,n.extUri,this.fileService),this.userConfigurationChangeDisposable.value=this.userConfiguration.value.onDidChange(()=>this.reloadConfigurationScheduler.schedule()),this.reloadConfigurationScheduler=this._register(new ze(()=>this.userConfiguration.value.loadConfiguration().then(o=>this._onDidChangeConfiguration.fire(o)),50))}async reset(e,t,i){this.settingsResource=e,this.tasksResource=t,this.configurationParseOptions={scopes:i,skipRestricted:!1};const r=this.uriIdentityService.extUri.dirname(this.settingsResource),n=this.tasksResource?[[b,this.tasksResource]]:[],s=new fe(r.toString(),this.settingsResource,n,this.configurationParseOptions,this.fileService,this.uriIdentityService,this.logService),o=await s.loadConfiguration();return this.userConfiguration.value=s,this.userConfigurationChangeDisposable.value&&(this.userConfigurationChangeDisposable.value=this.userConfiguration.value.onDidChange(()=>this.reloadConfigurationScheduler.schedule())),o}async initialize(){return this.userConfiguration.value.loadConfiguration()}async reload(){return this.hasTasksLoaded?this.userConfiguration.value.loadConfiguration():this.reset(this.settingsResource,this.tasksResource,this.configurationParseOptions.scopes)}reparse(){return this.userConfiguration.value.reparse(this.configurationParseOptions)}getRestrictedSettings(){return this.userConfiguration.value.getRestrictedSettings()}}class fe extends S{constructor(e,t,i,r,n,s,o){super(),this.settingsResource=t,this.standAloneConfigurationResources=i,this.fileService=n,this.uriIdentityService=s,this.logService=o,this._onDidChange=this._register(new k),this.onDidChange=this._onDidChange.event,this.allResources=[this.settingsResource,...this.standAloneConfigurationResources.map(([,a])=>a)],this._register($e(...this.allResources.map(a=>$e(this.fileService.watch(s.extUri.dirname(a)),this.fileService.watch(a))))),this._folderSettingsModelParser=new x(e),this._folderSettingsParseOptions=r,this._standAloneConfigurations=[],this._cache=new w,this._register(R.debounce(R.any(R.filter(this.fileService.onDidFilesChange,a=>this.handleFileChangesEvent(a)),R.filter(this.fileService.onDidRunOperation,a=>this.handleFileOperationEvent(a))),()=>{},100)(()=>this._onDidChange.fire()))}async resolveContents(){const e=async r=>Promise.all(r.map(async n=>{try{return(await this.fileService.readFile(n)).value.toString()}catch(s){this.logService.trace(`Error while resolving configuration file '${n.toString()}': ${Bt(s)}`),s.fileOperationResult!==1&&s.fileOperationResult!==9&&this.logService.error(s)}return"{}"})),[[t],i]=await Promise.all([e([this.settingsResource]),e(this.standAloneConfigurationResources.map(([,r])=>r))]);return[t,i.map((r,n)=>[this.standAloneConfigurationResources[n][0],r])]}async loadConfiguration(){const[e,t]=await this.resolveContents();this._standAloneConfigurations=[],this._folderSettingsModelParser.parse("",this._folderSettingsParseOptions),e!==void 0&&this._folderSettingsModelParser.parse(e,this._folderSettingsParseOptions);for(let i=0;i<t.length;i++){const r=t[i][1];if(r!==void 0){const n=new Ft(this.standAloneConfigurationResources[i][1].toString(),this.standAloneConfigurationResources[i][0]);n.parse(r),this._standAloneConfigurations.push(n.configurationModel)}}return this.consolidate(),this._cache}getRestrictedSettings(){return this._folderSettingsModelParser.restrictedConfigurations}reparse(e){const t=this._folderSettingsModelParser.configurationModel.contents;return this._folderSettingsParseOptions=e,this._folderSettingsModelParser.reparse(this._folderSettingsParseOptions),Z(t,this._folderSettingsModelParser.configurationModel.contents)||this.consolidate(),this._cache}consolidate(){this._cache=this._folderSettingsModelParser.configurationModel.merge(...this._standAloneConfigurations)}handleFileChangesEvent(e){return!!(this.allResources.some(t=>e.contains(t))||this.allResources.some(t=>e.contains(this.uriIdentityService.extUri.dirname(t),2)))}handleFileOperationEvent(e){return!!((e.isOperation(0)||e.isOperation(3)||e.isOperation(1)||e.isOperation(4))&&this.allResources.some(t=>this.uriIdentityService.extUri.isEqual(e.resource,t))||e.isOperation(1)&&this.allResources.some(t=>this.uriIdentityService.extUri.isEqual(e.resource,this.uriIdentityService.extUri.dirname(t))))}}class dr extends S{constructor(e,t,i,r,n){super(),this._userConfigurationInitializationPromise=null,this._onDidChangeConfiguration=this._register(new k),this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this._onDidInitialize=this._register(new k),this.onDidInitialize=this._onDidInitialize.event,this._fileService=i,this._userConfiguration=this._cachedConfiguration=new fr(e,t,{scopes:We}),n.getEnvironment().then(async s=>{if(s){const o=this._register(new _e(s.settingsPath,{scopes:We},this._fileService,r));this._register(o.onDidChangeConfiguration(c=>this.onDidUserConfigurationChange(c))),this._userConfigurationInitializationPromise=o.initialize();const a=await this._userConfigurationInitializationPromise;this._userConfiguration.dispose(),this._userConfiguration=o,this.onDidUserConfigurationChange(a),this._onDidInitialize.fire(a)}})}async initialize(){if(this._userConfiguration instanceof _e)return this._userConfiguration.initialize();let e=await this._userConfiguration.initialize();return this._userConfigurationInitializationPromise&&(e=await this._userConfigurationInitializationPromise,this._userConfigurationInitializationPromise=null),e}reload(){return this._userConfiguration.reload()}reparse(){return this._userConfiguration.reparse({scopes:We})}getRestrictedSettings(){return this._userConfiguration.getRestrictedSettings()}onDidUserConfigurationChange(e){this.updateCache(),this._onDidChangeConfiguration.fire(e)}async updateCache(){if(this._userConfiguration instanceof _e){let e;try{e=await this._userConfiguration.resolveContent()}catch(t){if(t.fileOperationResult!==1)return}await this._cachedConfiguration.updateConfiguration(e)}}}class _e extends S{constructor(e,t,i,r){super(),this.configurationResource=e,this.fileService=i,this.uriIdentityService=r,this._onDidChangeConfiguration=this._register(new k),this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this.fileWatcherDisposable=S.None,this.directoryWatcherDisposable=S.None,this.parser=new x(this.configurationResource.toString()),this.parseOptions=t,this._register(i.onDidFilesChange(n=>this.handleFileChangesEvent(n))),this._register(i.onDidRunOperation(n=>this.handleFileOperationEvent(n))),this.reloadConfigurationScheduler=this._register(new ze(()=>this.reload().then(n=>this._onDidChangeConfiguration.fire(n)),50)),this._register(qt(()=>{this.stopWatchingResource(),this.stopWatchingDirectory()}))}watchResource(){this.fileWatcherDisposable=this.fileService.watch(this.configurationResource)}stopWatchingResource(){this.fileWatcherDisposable.dispose(),this.fileWatcherDisposable=S.None}watchDirectory(){const e=this.uriIdentityService.extUri.dirname(this.configurationResource);this.directoryWatcherDisposable=this.fileService.watch(e)}stopWatchingDirectory(){this.directoryWatcherDisposable.dispose(),this.directoryWatcherDisposable=S.None}async initialize(){const e=await this.fileService.exists(this.configurationResource);return this.onResourceExists(e),this.reload()}async resolveContent(){return(await this.fileService.readFile(this.configurationResource)).value.toString()}async reload(){try{const e=await this.resolveContent();return this.parser.parse(e,this.parseOptions),this.parser.configurationModel}catch{return new w}}reparse(e){return this.parseOptions=e,this.parser.reparse(this.parseOptions),this.parser.configurationModel}getRestrictedSettings(){return this.parser.restrictedConfigurations}handleFileChangesEvent(e){let t=e.contains(this.configurationResource,0);e.contains(this.configurationResource,1)?(t=!0,this.onResourceExists(!0)):e.contains(this.configurationResource,2)&&(t=!0,this.onResourceExists(!1)),t&&this.reloadConfigurationScheduler.schedule()}handleFileOperationEvent(e){(e.isOperation(0)||e.isOperation(3)||e.isOperation(1)||e.isOperation(4))&&this.uriIdentityService.extUri.isEqual(e.resource,this.configurationResource)&&this.reloadConfigurationScheduler.schedule()}onResourceExists(e){e?(this.stopWatchingDirectory(),this.watchResource()):(this.stopWatchingResource(),this.watchDirectory())}}class fr extends S{constructor(e,t,i){super(),this.configurationCache=t,this._onDidChange=this._register(new k),this.onDidChange=this._onDidChange.event,this.key={type:"user",key:e},this.parser=new x("CachedRemoteUserConfiguration"),this.parseOptions=i,this.configurationModel=new w}getConfigurationModel(){return this.configurationModel}initialize(){return this.reload()}reparse(e){return this.parseOptions=e,this.parser.reparse(this.parseOptions),this.configurationModel=this.parser.configurationModel,this.configurationModel}getRestrictedSettings(){return this.parser.restrictedConfigurations}async reload(){try{const e=await this.configurationCache.read(this.key),t=JSON.parse(e);t.content&&(this.parser.parse(t.content,this.parseOptions),this.configurationModel=this.parser.configurationModel)}catch{}return this.configurationModel}async updateConfiguration(e){return e?this.configurationCache.write(this.key,JSON.stringify({content:e})):this.configurationCache.remove(this.key)}}class gr extends S{get initialized(){return this._initialized}constructor(e,t,i,r){super(),this.configurationCache=e,this.fileService=t,this.uriIdentityService=i,this.logService=r,this._workspaceConfigurationDisposables=this._register(new dt),this._workspaceIdentifier=null,this._isWorkspaceTrusted=!1,this._onDidUpdateConfiguration=this._register(new k),this.onDidUpdateConfiguration=this._onDidUpdateConfiguration.event,this._initialized=!1,this.fileService=t,this._workspaceConfiguration=this._cachedConfiguration=new pr(e)}async initialize(e,t){this._workspaceIdentifier=e,this._isWorkspaceTrusted=t,this._initialized||(this.configurationCache.needsCaching(this._workspaceIdentifier.configPath)?(this._workspaceConfiguration=this._cachedConfiguration,this.waitAndInitialize(this._workspaceIdentifier)):this.doInitialize(new se(this.fileService,this.uriIdentityService,this.logService))),await this.reload()}async reload(){this._workspaceIdentifier&&await this._workspaceConfiguration.load(this._workspaceIdentifier,{scopes:oe,skipRestricted:this.isUntrusted()})}getFolders(){return this._workspaceConfiguration.getFolders()}setFolders(e,t){return this._workspaceIdentifier?t.write(this._workspaceIdentifier.configPath,[{path:["folders"],value:e}],!0).then(()=>this.reload()):Promise.resolve()}isTransient(){return this._workspaceConfiguration.isTransient()}getConfiguration(){return this._workspaceConfiguration.getWorkspaceSettings()}updateWorkspaceTrust(e){return this._isWorkspaceTrusted=e,this.reparseWorkspaceSettings()}reparseWorkspaceSettings(){return this._workspaceConfiguration.reparseWorkspaceSettings({scopes:oe,skipRestricted:this.isUntrusted()}),this.getConfiguration()}getRestrictedSettings(){return this._workspaceConfiguration.getRestrictedSettings()}async waitAndInitialize(e){if(await ft(e.configPath,this.fileService),!(this._workspaceConfiguration instanceof se)){const t=this._register(new se(this.fileService,this.uriIdentityService,this.logService));await t.load(e,{scopes:oe,skipRestricted:this.isUntrusted()}),this.doInitialize(t),this.onDidWorkspaceConfigurationChange(!1,!0)}}doInitialize(e){this._workspaceConfigurationDisposables.clear(),this._workspaceConfiguration=this._workspaceConfigurationDisposables.add(e),this._workspaceConfigurationDisposables.add(this._workspaceConfiguration.onDidChange(t=>this.onDidWorkspaceConfigurationChange(!0,!1))),this._initialized=!0}isUntrusted(){return!this._isWorkspaceTrusted}async onDidWorkspaceConfigurationChange(e,t){e&&await this.reload(),this.updateCache(),this._onDidUpdateConfiguration.fire(t)}async updateCache(){if(this._workspaceIdentifier&&this.configurationCache.needsCaching(this._workspaceIdentifier.configPath)&&this._workspaceConfiguration instanceof se){const e=await this._workspaceConfiguration.resolveContent(this._workspaceIdentifier);await this._cachedConfiguration.updateWorkspace(this._workspaceIdentifier,e)}}}class se extends S{constructor(e,t,i){super(),this.fileService=e,this.logService=i,this._workspaceIdentifier=null,this._onDidChange=this._register(new k),this.onDidChange=this._onDidChange.event,this.workspaceConfigurationModelParser=new de(""),this.workspaceSettings=new w,this._register(R.any(R.filter(this.fileService.onDidFilesChange,r=>!!this._workspaceIdentifier&&r.contains(this._workspaceIdentifier.configPath)),R.filter(this.fileService.onDidRunOperation,r=>!!this._workspaceIdentifier&&(r.isOperation(0)||r.isOperation(3)||r.isOperation(1)||r.isOperation(4))&&t.extUri.isEqual(r.resource,this._workspaceIdentifier.configPath)))(()=>this.reloadConfigurationScheduler.schedule())),this.reloadConfigurationScheduler=this._register(new ze(()=>this._onDidChange.fire(),50)),this.workspaceConfigWatcher=this._register(this.watchWorkspaceConfigurationFile())}get workspaceIdentifier(){return this._workspaceIdentifier}async resolveContent(e){return(await this.fileService.readFile(e.configPath)).value.toString()}async load(e,t){(!this._workspaceIdentifier||this._workspaceIdentifier.id!==e.id)&&(this._workspaceIdentifier=e,this.workspaceConfigurationModelParser=new de(this._workspaceIdentifier.id),Ht(this.workspaceConfigWatcher),this.workspaceConfigWatcher=this._register(this.watchWorkspaceConfigurationFile()));let i="";try{i=await this.resolveContent(this._workspaceIdentifier)}catch(r){await this.fileService.exists(this._workspaceIdentifier.configPath)&&this.logService.error(r)}this.workspaceConfigurationModelParser.parse(i,t),this.consolidate()}getConfigurationModel(){return this.workspaceConfigurationModelParser.configurationModel}getFolders(){return this.workspaceConfigurationModelParser.folders}isTransient(){return this.workspaceConfigurationModelParser.transient}getWorkspaceSettings(){return this.workspaceSettings}reparseWorkspaceSettings(e){return this.workspaceConfigurationModelParser.reparseWorkspaceSettings(e),this.consolidate(),this.getWorkspaceSettings()}getRestrictedSettings(){return this.workspaceConfigurationModelParser.getRestrictedWorkspaceSettings()}consolidate(){this.workspaceSettings=this.workspaceConfigurationModelParser.settingsModel.merge(this.workspaceConfigurationModelParser.launchModel,this.workspaceConfigurationModelParser.tasksModel)}watchWorkspaceConfigurationFile(){return this._workspaceIdentifier?this.fileService.watch(this._workspaceIdentifier.configPath):S.None}}class pr{constructor(e){this.configurationCache=e,this.onDidChange=R.None,this.workspaceConfigurationModelParser=new de(""),this.workspaceSettings=new w}async load(e,t){try{const i=this.getKey(e),r=await this.configurationCache.read(i),n=JSON.parse(r);n.content&&(this.workspaceConfigurationModelParser=new de(i.key),this.workspaceConfigurationModelParser.parse(n.content,t),this.consolidate())}catch{}}get workspaceIdentifier(){return null}getConfigurationModel(){return this.workspaceConfigurationModelParser.configurationModel}getFolders(){return this.workspaceConfigurationModelParser.folders}isTransient(){return this.workspaceConfigurationModelParser.transient}getWorkspaceSettings(){return this.workspaceSettings}reparseWorkspaceSettings(e){return this.workspaceConfigurationModelParser.reparseWorkspaceSettings(e),this.consolidate(),this.getWorkspaceSettings()}getRestrictedSettings(){return this.workspaceConfigurationModelParser.getRestrictedWorkspaceSettings()}consolidate(){this.workspaceSettings=this.workspaceConfigurationModelParser.settingsModel.merge(this.workspaceConfigurationModelParser.launchModel,this.workspaceConfigurationModelParser.tasksModel)}async updateWorkspace(e,t){try{const i=this.getKey(e);t?await this.configurationCache.write(i,JSON.stringify({content:t})):await this.configurationCache.remove(i)}catch{}}getKey(e){return{type:"workspaces",key:e.id}}}class Cr{constructor(e,t,i,r){this.configurationCache=r,this.onDidChange=R.None,this.key={type:"folder",key:gt(q(e,t).toString()).toString(16)},this._folderSettingsModelParser=new x("CachedFolderConfiguration"),this._folderSettingsParseOptions=i,this._standAloneConfigurations=[],this.configurationModel=new w}async loadConfiguration(){try{const e=await this.configurationCache.read(this.key),{content:t}=JSON.parse(e.toString());if(t)for(const i of Object.keys(t))if(i===Fe)this._folderSettingsModelParser.parse(t[i],this._folderSettingsParseOptions);else{const r=new Ft(i,i);r.parse(t[i]),this._standAloneConfigurations.push(r.configurationModel)}this.consolidate()}catch{}return this.configurationModel}async updateConfiguration(e,t){const i={};e&&(i[Fe]=e),t.forEach(([r,n])=>{n&&(i[r]=n)}),Object.keys(i).length?await this.configurationCache.write(this.key,JSON.stringify({content:i})):await this.configurationCache.remove(this.key)}getRestrictedSettings(){return this._folderSettingsModelParser.restrictedConfigurations}reparse(e){return this._folderSettingsParseOptions=e,this._folderSettingsModelParser.reparse(this._folderSettingsParseOptions),this.consolidate(),this.configurationModel}consolidate(){this.configurationModel=this._folderSettingsModelParser.configurationModel.merge(...this._standAloneConfigurations)}getUnsupportedKeys(){return[]}}class wr extends S{constructor(e,t,i,r,n,s,o,a,c){super(),this.workspaceFolder=t,this.workbenchState=r,this.workspaceTrusted=n,this.configurationCache=c,this._onDidChange=this._register(new k),this.onDidChange=this._onDidChange.event,this.scopes=this.workbenchState===3?Pt:oe,this.configurationFolder=o.extUri.joinPath(t.uri,i),this.cachedFolderConfiguration=new Cr(t.uri,i,{scopes:this.scopes,skipRestricted:this.isUntrusted()},c),e&&this.configurationCache.needsCaching(t.uri)?(this.folderConfiguration=this.cachedFolderConfiguration,ft(t.uri,s).then(()=>{this.folderConfiguration=this._register(this.createFileServiceBasedConfiguration(s,o,a)),this._register(this.folderConfiguration.onDidChange(h=>this.onDidFolderConfigurationChange())),this.onDidFolderConfigurationChange()})):(this.folderConfiguration=this._register(this.createFileServiceBasedConfiguration(s,o,a)),this._register(this.folderConfiguration.onDidChange(h=>this.onDidFolderConfigurationChange())))}loadConfiguration(){return this.folderConfiguration.loadConfiguration()}updateWorkspaceTrust(e){return this.workspaceTrusted=e,this.reparse()}reparse(){const e=this.folderConfiguration.reparse({scopes:this.scopes,skipRestricted:this.isUntrusted()});return this.updateCache(),e}getRestrictedSettings(){return this.folderConfiguration.getRestrictedSettings()}isUntrusted(){return!this.workspaceTrusted}onDidFolderConfigurationChange(){this.updateCache(),this._onDidChange.fire()}createFileServiceBasedConfiguration(e,t,i){const r=t.extUri.joinPath(this.configurationFolder,`${Fe}.json`),n=[b,V].map(s=>[s,t.extUri.joinPath(this.configurationFolder,`${s}.json`)]);return new fe(this.configurationFolder.toString(),r,n,{scopes:this.scopes,skipRestricted:this.isUntrusted()},e,t,i)}async updateCache(){if(this.configurationCache.needsCaching(this.configurationFolder)&&this.folderConfiguration instanceof fe){const[e,t]=await this.folderConfiguration.resolveContents();this.cachedFolderConfiguration.updateConfiguration(e,t)}}}function tt(d,e){return d.isDefault?e?sr:void 0:e?nr:or}class be extends li{constructor(){super(...arguments),this.initialized=!1}}class kr extends S{get restrictedSettings(){return this._restrictedSettings}constructor({remoteAuthority:e,configurationCache:t},i,r,n,s,o,a,c,h){if(super(),this.userDataProfileService=r,this.userDataProfilesService=n,this.fileService=s,this.remoteAgentService=o,this.uriIdentityService=a,this.logService=c,this.initialized=!1,this.applicationConfiguration=null,this.remoteUserConfiguration=null,this._onDidChangeConfiguration=this._register(new k),this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this._onWillChangeWorkspaceFolders=this._register(new k),this.onWillChangeWorkspaceFolders=this._onWillChangeWorkspaceFolders.event,this._onDidChangeWorkspaceFolders=this._register(new k),this.onDidChangeWorkspaceFolders=this._onDidChangeWorkspaceFolders.event,this._onDidChangeWorkspaceName=this._register(new k),this.onDidChangeWorkspaceName=this._onDidChangeWorkspaceName.event,this._onDidChangeWorkbenchState=this._register(new k),this.onDidChangeWorkbenchState=this._onDidChangeWorkbenchState.event,this.isWorkspaceTrusted=!0,this._restrictedSettings={default:[]},this._onDidChangeRestrictedSettings=this._register(new k),this.onDidChangeRestrictedSettings=this._onDidChangeRestrictedSettings.event,this.configurationRegistry=W.as(F.Configuration),this.initRemoteUserConfigurationBarrier=new He,this.completeWorkspaceBarrier=new He,this.defaultConfiguration=this._register(new $(t,i)),this.policyConfiguration=h instanceof ei?new ti:this._register(new ii(this.defaultConfiguration,h,c)),this.configurationCache=t,this._configuration=new Ze(this.defaultConfiguration.configurationModel,this.policyConfiguration.configurationModel,new w,new w,new w,new w,new O,new w,new O,this.workspace),this.applicationConfigurationDisposables=this._register(new dt),this.createApplicationConfiguration(),this.localUserConfiguration=this._register(new et(r.currentProfile.settingsResource,r.currentProfile.tasksResource,tt(r.currentProfile,!!e),s,a,c)),this.cachedFolderConfigs=new O,this._register(this.localUserConfiguration.onDidChangeConfiguration(l=>this.onLocalUserConfigurationChanged(l))),e){const l=this.remoteUserConfiguration=this._register(new dr(e,t,s,a,o));this._register(l.onDidInitialize(p=>{this._register(l.onDidChangeConfiguration(v=>this.onRemoteUserConfigurationChanged(v))),this.onRemoteUserConfigurationChanged(p),this.initRemoteUserConfigurationBarrier.open()}))}else this.initRemoteUserConfigurationBarrier.open();this.workspaceConfiguration=this._register(new gr(t,s,a,c)),this._register(this.workspaceConfiguration.onDidUpdateConfiguration(l=>{this.onWorkspaceConfigurationChanged(l).then(()=>{this.workspace.initialized=this.workspaceConfiguration.initialized,this.checkAndMarkWorkspaceComplete(l)})})),this._register(this.defaultConfiguration.onDidChangeConfiguration(({properties:l,defaults:p})=>this.onDefaultConfigurationChanged(p,l))),this._register(this.policyConfiguration.onDidChangeConfiguration(l=>this.onPolicyConfigurationChanged(l))),this._register(r.onDidChangeCurrentProfile(l=>this.onUserDataProfileChanged(l))),this.workspaceEditingQueue=new Ne}createApplicationConfiguration(){this.applicationConfigurationDisposables.clear(),this.userDataProfileService.currentProfile.isDefault?this.applicationConfiguration=null:(this.applicationConfiguration=this.applicationConfigurationDisposables.add(this._register(new et(this.userDataProfilesService.defaultProfile.settingsResource,void 0,[1],this.fileService,this.uriIdentityService,this.logService))),this.applicationConfigurationDisposables.add(this.applicationConfiguration.onDidChangeConfiguration(e=>this.onApplicationConfigurationChanged(e))))}async getCompleteWorkspace(){return await this.completeWorkspaceBarrier.wait(),this.getWorkspace()}getWorkspace(){return this.workspace}getWorkbenchState(){return this.workspace.configuration?3:this.workspace.folders.length===1?2:1}getWorkspaceFolder(e){return this.workspace.getFolder(e)}addFolders(e,t){return this.updateFolders(e,[],t)}removeFolders(e){return this.updateFolders([],e)}async updateFolders(e,t,i){return this.workspaceEditingQueue.queue(()=>this.doUpdateFolders(e,t,i))}isInsideWorkspace(e){return!!this.getWorkspaceFolder(e)}isCurrentWorkspace(e){switch(this.getWorkbenchState()){case 2:{let t;return A.isUri(e)?t=e:he(e)&&(t=e.uri),A.isUri(t)&&this.uriIdentityService.extUri.isEqual(t,this.workspace.folders[0].uri)}case 3:return ee(e)&&this.workspace.id===e.id}return!1}async doUpdateFolders(e,t,i){if(this.getWorkbenchState()!==3||e.length+t.length===0)return Promise.resolve(void 0);let r=!1,n=this.getWorkspace().folders,s=n.map(o=>o.raw).filter((o,a)=>ri(o)?!this.contains(t,n[a].uri):!0);if(r=n.length!==s.length,e.length){const o=this.getWorkspace().configuration,a=this.uriIdentityService.extUri.dirname(o);n=Se(s,o,this.uriIdentityService.extUri);const c=n.map(l=>l.uri),h=[];for(const l of e){const p=l.uri;if(!this.contains(c,p)){try{if(!(await this.fileService.stat(p)).isDirectory)continue}catch{}h.push(St(p,!1,l.name,a,this.uriIdentityService.extUri))}}h.length>0&&(r=!0,typeof i=="number"&&i>=0&&i<s.length?(s=s.slice(0),s.splice(i,0,...h)):s=[...s,...h])}return r?this.setFolders(s):Promise.resolve(void 0)}async setFolders(e){if(!this.instantiationService)throw new Error("Cannot update workspace folders because workspace service is not yet ready to accept writes.");return await this.instantiationService.invokeFunction(t=>this.workspaceConfiguration.setFolders(e,t.get(vt))),this.onWorkspaceConfigurationChanged(!1)}contains(e,t){return e.some(i=>this.uriIdentityService.extUri.isEqual(i,t))}getConfigurationData(){return this._configuration.toData()}getValue(e,t){const i=typeof e=="string"?e:void 0,r=ve(e)?e:ve(t)?t:void 0;return this._configuration.getValue(i,r)}async updateValue(e,t,i,r,n){const s=si(i)?i:ve(i)?{resource:i.resource,overrideIdentifiers:i.overrideIdentifier?[i.overrideIdentifier]:void 0}:void 0,o=s?r:i,a=o?[o]:[];if(s!=null&&s.overrideIdentifiers&&(s.overrideIdentifiers=ue(s.overrideIdentifiers),s.overrideIdentifiers=s.overrideIdentifiers.length?s.overrideIdentifiers:void 0),!a.length){if(s!=null&&s.overrideIdentifiers&&s.overrideIdentifiers.length>1)throw new Error("Configuration Target is required while updating the value for multiple override identifiers");const c=this.inspect(e,{resource:s==null?void 0:s.resource,overrideIdentifier:s!=null&&s.overrideIdentifiers?s.overrideIdentifiers[0]:void 0});a.push(...this.deriveConfigurationTargets(e,t,c)),Z(t,c.defaultValue)&&a.length===1&&(a[0]===2||a[0]===3)&&(t=void 0)}await Be.settled(a.map(c=>this.writeConfigurationValue(e,t,c,s,n)))}async reloadConfiguration(e){if(e===void 0){this.reloadDefaultConfiguration();const t=await this.reloadApplicationConfiguration(!0),{local:i,remote:r}=await this.reloadUserConfiguration();await this.reloadWorkspaceConfiguration(),await this.loadConfiguration(t,i,r,!0);return}if(ni(e)){await this.reloadWorkspaceFolderConfiguration(e);return}switch(e){case 7:this.reloadDefaultConfiguration();return;case 2:{const{local:t,remote:i}=await this.reloadUserConfiguration();await this.loadConfiguration(this._configuration.applicationConfiguration,t,i,!0);return}case 3:await this.reloadLocalUserConfiguration();return;case 4:await this.reloadRemoteUserConfiguration();return;case 5:case 6:await this.reloadWorkspaceConfiguration();return}}hasCachedConfigurationDefaultsOverrides(){return this.defaultConfiguration.hasCachedConfigurationDefaultsOverrides()}inspect(e,t){return this._configuration.inspect(e,t)}keys(){return this._configuration.keys()}async whenRemoteConfigurationLoaded(){await this.initRemoteUserConfigurationBarrier.wait()}async initialize(e){N("code/willInitWorkspaceService");const t=this.initialized;this.initialized=!1;const i=await this.createWorkspace(e);await this.updateWorkspaceAndInitializeConfiguration(i,t),this.checkAndMarkWorkspaceComplete(!1),N("code/didInitWorkspaceService")}updateWorkspaceTrust(e){var t;if(this.isWorkspaceTrusted!==e){this.isWorkspaceTrusted=e;const i=this._configuration.toData(),r=[];for(const s of this.workspace.folders){const o=this.cachedFolderConfigs.get(s.uri);let a;o&&(a=o.updateWorkspaceTrust(this.isWorkspaceTrusted),this._configuration.updateFolderConfiguration(s.uri,a)),r.push(a)}this.getWorkbenchState()===2?r[0]&&this._configuration.updateWorkspaceConfiguration(r[0]):this._configuration.updateWorkspaceConfiguration(this.workspaceConfiguration.updateWorkspaceTrust(this.isWorkspaceTrusted)),this.updateRestrictedSettings();let n=[];this.restrictedSettings.userLocal&&n.push(...this.restrictedSettings.userLocal),this.restrictedSettings.userRemote&&n.push(...this.restrictedSettings.userRemote),this.restrictedSettings.workspace&&n.push(...this.restrictedSettings.workspace),(t=this.restrictedSettings.workspaceFolder)==null||t.forEach(s=>n.push(...s)),n=ue(n),n.length&&this.triggerConfigurationChange({keys:n,overrides:[]},{data:i,workspace:this.workspace},5)}}acquireInstantiationService(e){this.instantiationService=e}async createWorkspace(e){return ee(e)?this.createMultiFolderWorkspace(e):he(e)?this.createSingleFolderWorkspace(e):this.createEmptyWorkspace(e)}async createMultiFolderWorkspace(e){await this.workspaceConfiguration.initialize({id:e.id,configPath:e.configPath},this.isWorkspaceTrusted);const t=e.configPath,i=Se(this.workspaceConfiguration.getFolders(),t,this.uriIdentityService.extUri),r=e.id,n=new be(r,i,this.workspaceConfiguration.isTransient(),t,s=>this.uriIdentityService.extUri.ignorePathCasing(s));return n.initialized=this.workspaceConfiguration.initialized,n}createSingleFolderWorkspace(e){const t=new be(e.id,[oi(e.uri)],!1,null,i=>this.uriIdentityService.extUri.ignorePathCasing(i));return t.initialized=!0,t}createEmptyWorkspace(e){const t=new be(e.id,[],!1,null,i=>this.uriIdentityService.extUri.ignorePathCasing(i));return t.initialized=!0,Promise.resolve(t)}checkAndMarkWorkspaceComplete(e){!this.completeWorkspaceBarrier.isOpen()&&this.workspace.initialized&&(this.completeWorkspaceBarrier.open(),this.validateWorkspaceFoldersAndReload(e))}async updateWorkspaceAndInitializeConfiguration(e,t){const i=!!this.workspace;let r,n,s=[];if(i?(r=this.getWorkbenchState(),n=this.workspace.configuration?this.workspace.configuration.fsPath:void 0,s=this.workspace.folders,this.workspace.update(e)):this.workspace=e,await this.initializeConfiguration(t),i){const o=this.getWorkbenchState();r&&o!==r&&this._onDidChangeWorkbenchState.fire(o);const a=this.workspace.configuration?this.workspace.configuration.fsPath:void 0;(n&&a!==n||o!==r)&&this._onDidChangeWorkspaceName.fire();const c=this.compareFolders(s,this.workspace.folders);c&&(c.added.length||c.removed.length||c.changed.length)&&(await this.handleWillChangeWorkspaceFolders(c,!1),this._onDidChangeWorkspaceFolders.fire(c))}this.localUserConfiguration.hasTasksLoaded||this._register(ai(()=>this.reloadLocalUserConfiguration()))}compareFolders(e,t){const i={added:[],removed:[],changed:[]};i.added=t.filter(r=>!e.some(n=>r.uri.toString()===n.uri.toString()));for(let r=0;r<e.length;r++){const n=e[r];let s=0;for(s=0;s<t.length&&n.uri.toString()!==t[s].uri.toString();s++);s<t.length?(r!==s||n.name!==t[s].name)&&i.changed.push(n):i.removed.push(n)}return i}async initializeConfiguration(e){await this.defaultConfiguration.initialize();const[,t,i]=await Promise.all([this.policyConfiguration.initialize(),this.initializeApplicationConfiguration(),(async()=>{N("code/willInitUserConfiguration");const r=await this.initializeUserConfiguration();return N("code/didInitUserConfiguration"),r})()]);N("code/willInitWorkspaceConfiguration"),await this.loadConfiguration(t,i.local,i.remote,e),N("code/didInitWorkspaceConfiguration")}async initializeApplicationConfiguration(){return this.applicationConfiguration?this.applicationConfiguration.initialize():Promise.resolve(new w)}async initializeUserConfiguration(){const[e,t]=await Promise.all([this.localUserConfiguration.initialize(),this.remoteUserConfiguration?this.remoteUserConfiguration.initialize():Promise.resolve(new w)]);return{local:e,remote:t}}reloadDefaultConfiguration(){this.onDefaultConfigurationChanged(this.defaultConfiguration.reload())}async reloadApplicationConfiguration(e){if(!this.applicationConfiguration)return new w;const t=await this.applicationConfiguration.reload();return e||this.onApplicationConfigurationChanged(t),t}async reloadUserConfiguration(){const[e,t]=await Promise.all([this.reloadLocalUserConfiguration(!0),this.reloadRemoteUserConfiguration(!0)]);return{local:e,remote:t}}async reloadLocalUserConfiguration(e){const t=await this.localUserConfiguration.reload();return e||this.onLocalUserConfigurationChanged(t),t}async reloadRemoteUserConfiguration(e){if(this.remoteUserConfiguration){const t=await this.remoteUserConfiguration.reload();return e||this.onRemoteUserConfigurationChanged(t),t}return new w}async reloadWorkspaceConfiguration(){const e=this.getWorkbenchState();if(e===2)return this.onWorkspaceFolderConfigurationChanged(this.workspace.folders[0]);if(e===3)return this.workspaceConfiguration.reload().then(()=>this.onWorkspaceConfigurationChanged(!1))}reloadWorkspaceFolderConfiguration(e){return this.onWorkspaceFolderConfigurationChanged(e)}async loadConfiguration(e,t,i,r){this.cachedFolderConfigs=new O;const n=this.workspace.folders,s=await this.loadFolderConfigurations(n),o=this.getWorkspaceConfigurationModel(s),a=new O;s.forEach((h,l)=>a.set(n[l].uri,h));const c=this._configuration;if(this._configuration=new Ze(this.defaultConfiguration.configurationModel,this.policyConfiguration.configurationModel,e,t,i,o,a,new w,new O,this.workspace),this.initialized=!0,r){const h=this._configuration.compare(c);this.triggerConfigurationChange(h,{data:c.toData(),workspace:this.workspace},5)}this.updateRestrictedSettings()}getWorkspaceConfigurationModel(e){switch(this.getWorkbenchState()){case 2:return e[0];case 3:return this.workspaceConfiguration.getConfiguration();default:return new w}}onUserDataProfileChanged(e){e.join((async()=>{e.preserveData&&await Promise.all([this.copyProfileSettings(e.previous.settingsResource,e.profile.settingsResource),this.copyProfileTasks(e.previous.tasksResource,e.profile.tasksResource)]);const t=[];t.push(this.localUserConfiguration.reset(e.profile.settingsResource,e.profile.tasksResource,tt(e.profile,!!this.remoteUserConfiguration))),e.previous.isDefault!==e.profile.isDefault&&(this.createApplicationConfiguration(),this.applicationConfiguration&&t.push(this.reloadApplicationConfiguration(!0)));const[i,r]=await Promise.all(t);await this.loadConfiguration(r??this._configuration.applicationConfiguration,i,this._configuration.remoteUserConfiguration,!0)})())}async copyProfileSettings(e,t){let i;try{i=(await this.fileService.readFile(e)).value.toString()}catch(o){if(o.fileOperationResult!==1)throw o}if(!i)return;const r=W.as(F.Configuration).getConfigurationProperties(),n=Object.keys(r).filter(o=>{var a;return((a=r[o])==null?void 0:a.scope)===1}),s=hr(i,"{}",n,{});await this.fileService.writeFile(t,ie.fromString(s))}async copyProfileTasks(e,t){await this.fileService.exists(e)&&await this.fileService.copy(e,t)}onDefaultConfigurationChanged(e,t){if(this.workspace){const i=this._configuration.toData(),r=this._configuration.compareAndUpdateDefaultConfiguration(e,t);if(this.applicationConfiguration&&this._configuration.updateApplicationConfiguration(this.applicationConfiguration.reparse()),this.remoteUserConfiguration&&(this._configuration.updateLocalUserConfiguration(this.localUserConfiguration.reparse()),this._configuration.updateRemoteUserConfiguration(this.remoteUserConfiguration.reparse())),this.getWorkbenchState()===2){const n=this.cachedFolderConfigs.get(this.workspace.folders[0].uri);n&&(this._configuration.updateWorkspaceConfiguration(n.reparse()),this._configuration.updateFolderConfiguration(this.workspace.folders[0].uri,n.reparse()))}else{this._configuration.updateWorkspaceConfiguration(this.workspaceConfiguration.reparseWorkspaceSettings());for(const n of this.workspace.folders){const s=this.cachedFolderConfigs.get(n.uri);s&&this._configuration.updateFolderConfiguration(n.uri,s.reparse())}}this.triggerConfigurationChange(r,{data:i,workspace:this.workspace},7),this.updateRestrictedSettings()}}onPolicyConfigurationChanged(e){const t={data:this._configuration.toData(),workspace:this.workspace},i=this._configuration.compareAndUpdatePolicyConfiguration(e);this.triggerConfigurationChange(i,t,7)}onApplicationConfigurationChanged(e){const t={data:this._configuration.toData(),workspace:this.workspace},i=this._configuration.compareAndUpdateApplicationConfiguration(e),r=this.configurationRegistry.getConfigurationProperties();i.keys=i.keys.filter(n=>{var s;return((s=r[n])==null?void 0:s.scope)===1}),this.triggerConfigurationChange(i,t,2)}onLocalUserConfigurationChanged(e){const t={data:this._configuration.toData(),workspace:this.workspace},i=this._configuration.compareAndUpdateLocalUserConfiguration(e);this.triggerConfigurationChange(i,t,2)}onRemoteUserConfigurationChanged(e){const t={data:this._configuration.toData(),workspace:this.workspace},i=this._configuration.compareAndUpdateRemoteUserConfiguration(e);this.triggerConfigurationChange(i,t,2)}async onWorkspaceConfigurationChanged(e){if(this.workspace&&this.workspace.configuration){let t=Se(this.workspaceConfiguration.getFolders(),this.workspace.configuration,this.uriIdentityService.extUri);if(this.workspace.initialized){const{added:i,removed:r,changed:n}=this.compareFolders(this.workspace.folders,t);i.length||r.length||n.length?t=await this.toValidWorkspaceFolders(t):t=this.workspace.folders}await this.updateWorkspaceConfiguration(t,this.workspaceConfiguration.getConfiguration(),e)}}updateRestrictedSettings(){var D,E,y;const e=[],t=this.configurationRegistry.getConfigurationProperties(),i=Object.keys(t).filter(g=>t[g].restricted).sort((g,C)=>g.localeCompare(C)),r=z(i,this._restrictedSettings.default,(g,C)=>g.localeCompare(C));e.push(...r.added,...r.removed);const n=(((D=this.applicationConfiguration)==null?void 0:D.getRestrictedSettings())||[]).sort((g,C)=>g.localeCompare(C)),s=z(n,this._restrictedSettings.application||[],(g,C)=>g.localeCompare(C));e.push(...s.added,...s.removed);const o=this.localUserConfiguration.getRestrictedSettings().sort((g,C)=>g.localeCompare(C)),a=z(o,this._restrictedSettings.userLocal||[],(g,C)=>g.localeCompare(C));e.push(...a.added,...a.removed);const c=(((E=this.remoteUserConfiguration)==null?void 0:E.getRestrictedSettings())||[]).sort((g,C)=>g.localeCompare(C)),h=z(c,this._restrictedSettings.userRemote||[],(g,C)=>g.localeCompare(C));e.push(...h.added,...h.removed);const l=new O;for(const g of this.workspace.folders){const C=this.cachedFolderConfigs.get(g.uri),Ce=((C==null?void 0:C.getRestrictedSettings())||[]).sort((we,ke)=>we.localeCompare(ke));Ce.length&&l.set(g.uri,Ce);const It=((y=this._restrictedSettings.workspaceFolder)==null?void 0:y.get(g.uri))||[],je=z(Ce,It,(we,ke)=>we.localeCompare(ke));e.push(...je.added,...je.removed)}const p=this.getWorkbenchState()===3?this.workspaceConfiguration.getRestrictedSettings().sort((g,C)=>g.localeCompare(C)):this.workspace.folders[0]?l.get(this.workspace.folders[0].uri)||[]:[],v=z(p,this._restrictedSettings.workspace||[],(g,C)=>g.localeCompare(C));e.push(...v.added,...v.removed),e.length&&(this._restrictedSettings={default:i,application:n.length?n:void 0,userLocal:o.length?o:void 0,userRemote:c.length?c:void 0,workspace:p.length?p:void 0,workspaceFolder:l.size?l:void 0},this._onDidChangeRestrictedSettings.fire(this.restrictedSettings))}async updateWorkspaceConfiguration(e,t,i){const r={data:this._configuration.toData(),workspace:this.workspace},n=this._configuration.compareAndUpdateWorkspaceConfiguration(t),s=this.compareFolders(this.workspace.folders,e);if(s.added.length||s.removed.length||s.changed.length){this.workspace.folders=e;const o=await this.onFoldersChanged();await this.handleWillChangeWorkspaceFolders(s,i),this.triggerConfigurationChange(o,r,6),this._onDidChangeWorkspaceFolders.fire(s)}else this.triggerConfigurationChange(n,r,5);this.updateRestrictedSettings()}async handleWillChangeWorkspaceFolders(e,t){const i=[];this._onWillChangeWorkspaceFolders.fire({join(r){i.push(r)},changes:e,fromCache:t});try{await Be.settled(i)}catch{}}async onWorkspaceFolderConfigurationChanged(e){const[t]=await this.loadFolderConfigurations([e]),i={data:this._configuration.toData(),workspace:this.workspace},r=this._configuration.compareAndUpdateFolderConfiguration(e.uri,t);if(this.getWorkbenchState()===2){const n=this._configuration.compareAndUpdateWorkspaceConfiguration(t);this.triggerConfigurationChange(Ge(r,n),i,5)}else this.triggerConfigurationChange(r,i,6);this.updateRestrictedSettings()}async onFoldersChanged(){const e=[];for(const i of this.cachedFolderConfigs.keys())this.workspace.folders.filter(r=>r.uri.toString()===i.toString())[0]||(this.cachedFolderConfigs.get(i).dispose(),this.cachedFolderConfigs.delete(i),e.push(this._configuration.compareAndDeleteFolderConfiguration(i)));const t=this.workspace.folders.filter(i=>!this.cachedFolderConfigs.has(i.uri));return t.length&&(await this.loadFolderConfigurations(t)).forEach((r,n)=>{e.push(this._configuration.compareAndUpdateFolderConfiguration(t[n].uri,r))}),Ge(...e)}loadFolderConfigurations(e){return Promise.all([...e.map(t=>{let i=this.cachedFolderConfigs.get(t.uri);return i||(i=new wr(!this.initialized,t,rr,this.getWorkbenchState(),this.isWorkspaceTrusted,this.fileService,this.uriIdentityService,this.logService,this.configurationCache),this._register(i.onDidChange(()=>this.onWorkspaceFolderConfigurationChanged(t))),this.cachedFolderConfigs.set(t.uri,this._register(i))),i.loadConfiguration()})])}async validateWorkspaceFoldersAndReload(e){const t=await this.toValidWorkspaceFolders(this.workspace.folders),{removed:i}=this.compareFolders(this.workspace.folders,t);i.length&&await this.updateWorkspaceConfiguration(t,this.workspaceConfiguration.getConfiguration(),e)}async toValidWorkspaceFolders(e){const t=[];for(const i of e){try{if(!(await this.fileService.stat(i.uri)).isDirectory)continue}catch(r){this.logService.warn(`Ignoring the error while validating workspace folder ${i.uri.toString()} - ${ci(r)}`)}t.push(i)}return t}async writeConfigurationValue(e,t,i,r,n){var o,a,c;if(!this.instantiationService)throw new Error("Cannot write configuration because the configuration service is not yet ready to accept writes.");if(i===7)throw new Error("Invalid configuration target");if(i===8){const h={data:this._configuration.toData(),workspace:this.workspace};this._configuration.updateValue(e,t,r),this.triggerConfigurationChange({keys:(o=r==null?void 0:r.overrideIdentifiers)!=null&&o.length?[ht(r.overrideIdentifiers),e]:[e],overrides:(a=r==null?void 0:r.overrideIdentifiers)!=null&&a.length?r.overrideIdentifiers.map(l=>[l,[e]]):[]},h,i);return}const s=this.toEditableConfigurationTarget(i,e);if(!s)throw new Error("Invalid configuration target");if(s===2&&!this.remoteUserConfiguration)throw new Error("Invalid configuration target");switch(this.configurationEditing=this.configurationEditing??this.instantiationService.createInstance(Ie,((c=await this.remoteAgentService.getEnvironment())==null?void 0:c.settingsPath)??null),await this.configurationEditing.writeConfiguration(s,{key:e,value:t},{scopes:r,...n}),s){case 1:this.applicationConfiguration&&this.configurationRegistry.getConfigurationProperties()[e].scope===1?await this.reloadApplicationConfiguration():await this.reloadLocalUserConfiguration();return;case 2:return this.reloadRemoteUserConfiguration().then(()=>{});case 3:return this.reloadWorkspaceConfiguration();case 4:{const h=r&&r.resource?this.workspace.getFolder(r.resource):null;if(h)return this.reloadWorkspaceFolderConfiguration(h)}}}deriveConfigurationTargets(e,t,i){if(Z(t,i.value))return[];const r=[];return i.workspaceFolderValue!==void 0&&r.push(6),i.workspaceValue!==void 0&&r.push(5),i.userRemoteValue!==void 0&&r.push(4),i.userLocalValue!==void 0&&r.push(3),t===void 0?r:[r[0]||2]}triggerConfigurationChange(e,t,i){if(e.keys.length){i!==7&&this.logService.debug(`Configuration keys changed in ${ui(i)} target`,...e.keys);const r=new hi(e,t,this._configuration,this.workspace);r.source=i,r.sourceConfig=this.getTargetConfiguration(i),this._onDidChangeConfiguration.fire(r)}}getTargetConfiguration(e){switch(e){case 7:return this._configuration.defaults.contents;case 2:return this._configuration.userConfiguration.contents;case 5:return this._configuration.workspaceConfiguration.contents}return{}}toEditableConfigurationTarget(e,t){var i;if(e===2){if(this.remoteUserConfiguration){const r=(i=this.configurationRegistry.getConfigurationProperties()[t])==null?void 0:i.scope;if(r===2||r===6||this.inspect(t).userRemoteValue!==void 0)return 2}return 1}return e===3?1:e===4?2:e===5?3:e===6?4:null}}let Oe=class extends S{constructor(e,t,i,r,n){super(),this.workspaceContextService=e,this.environmentService=t,this.workspaceTrustManagementService=i,r.whenInstalledExtensionsRegistered().then(()=>{this.registerConfigurationSchemas();const s=W.as(F.Configuration),o=this._register(new Yt(50));this._register(R.any(s.onDidUpdateConfiguration,s.onDidSchemaChange,i.onDidChangeTrust)(()=>o.trigger(()=>this.registerConfigurationSchemas(),n.phase===4?void 0:2500)))})}registerConfigurationSchemas(){const e=W.as(wt.JSONContribution),t={properties:_.properties,patternProperties:_.patternProperties,additionalProperties:!0,allowTrailingCommas:!0,allowComments:!0},i=this.environmentService.remoteAuthority?{properties:Object.assign({},Xt.properties,G.properties,L.properties),patternProperties:_.patternProperties,additionalProperties:!0,allowTrailingCommas:!0,allowComments:!0}:t,r={properties:Object.assign({},qe.properties,J.properties,G.properties,L.properties),patternProperties:_.patternProperties,additionalProperties:!0,allowTrailingCommas:!0,allowComments:!0},n={properties:Object.assign({},qe.properties,J.properties,G.properties,L.properties),patternProperties:_.patternProperties,additionalProperties:!0,allowTrailingCommas:!0,allowComments:!0},s={properties:Object.assign({},this.checkAndFilterPropertiesRequiringTrust(J.properties),this.checkAndFilterPropertiesRequiringTrust(G.properties),this.checkAndFilterPropertiesRequiringTrust(L.properties)),patternProperties:_.patternProperties,additionalProperties:!0,allowTrailingCommas:!0,allowComments:!0};if(e.registerSchema(Zi,{properties:Object.keys(_.properties).reduce((o,a)=>(o[a]=Object.assign({deprecationMessage:void 0},_.properties[a]),o),{}),patternProperties:Object.keys(_.patternProperties).reduce((o,a)=>(o[a]=Object.assign({deprecationMessage:void 0},_.patternProperties[a]),o),{}),additionalProperties:!0,allowTrailingCommas:!0,allowComments:!0}),e.registerSchema(er,i),e.registerSchema(tr,r),e.registerSchema(ir,n),this.workspaceContextService.getWorkbenchState()===3){const o={properties:Object.assign({},this.checkAndFilterPropertiesRequiringTrust(J.properties),this.checkAndFilterPropertiesRequiringTrust(L.properties)),patternProperties:_.patternProperties,additionalProperties:!0,allowTrailingCommas:!0,allowComments:!0};e.registerSchema(Ee,s),e.registerSchema(Qe,o)}else e.registerSchema(Ee,s),e.registerSchema(Qe,s);e.registerSchema(kt,{type:"object",description:u("configurationDefaults.description","Contribute defaults for configurations"),properties:Object.assign({},J.properties,G.properties,L.properties),patternProperties:{[Qt]:{type:"object",default:{},$ref:Zt}},additionalProperties:!1})}checkAndFilterPropertiesRequiringTrust(e){if(this.workspaceTrustManagementService.isWorkspaceTrusted())return e;const t={};return Object.entries(e).forEach(([i,r])=>{r.restricted||(t[i]=r)}),t}};Oe=M([f(0,T),f(1,te),f(2,pt),f(3,Gt),f(4,Ct)],Oe);const Sr=W.as(Jt.Workbench);Sr.registerWorkbenchContribution(Oe,3);let Ue=class extends S{constructor(e,t,i){super(),this.configurationService=e,this.modelService=t,this.languageService=i,this._onDidChangeConfiguration=this._register(new k),this.onDidChangeConfiguration=this._onDidChangeConfiguration.event,this._register(this.configurationService.onDidChangeConfiguration(r=>this._onDidChangeConfiguration.fire(this.toResourceConfigurationChangeEvent(r))))}getValue(e,t,i){return typeof i=="string"?this._getValue(e,gi.isIPosition(t)?t:null,i):this._getValue(e,null,typeof t=="string"?t:void 0)}updateValue(e,t,i,r){var o,a,c,h,l;const n=this.getLanguage(e,null),s=this.configurationService.inspect(t,{resource:e,overrideIdentifier:n});switch(r===void 0&&(r=this.deriveConfigurationTarget(s,n)),r){case 8:return this._updateValue(t,i,r,(o=s.memory)==null?void 0:o.override,e,n);case 6:return this._updateValue(t,i,r,(a=s.workspaceFolder)==null?void 0:a.override,e,n);case 5:return this._updateValue(t,i,r,(c=s.workspace)==null?void 0:c.override,e,n);case 4:return this._updateValue(t,i,r,(h=s.userRemote)==null?void 0:h.override,e,n);default:return this._updateValue(t,i,r,(l=s.userLocal)==null?void 0:l.override,e,n)}}_updateValue(e,t,i,r,n,s){return s&&r!==void 0?this.configurationService.updateValue(e,t,{resource:n,overrideIdentifier:s},i):this.configurationService.updateValue(e,t,{resource:n},i)}deriveConfigurationTarget(e,t){var i,r,n,s,o,a,c,h,l;if(t){if(((i=e.memory)==null?void 0:i.override)!==void 0)return 8;if(((r=e.workspaceFolder)==null?void 0:r.override)!==void 0)return 6;if(((n=e.workspace)==null?void 0:n.override)!==void 0)return 5;if(((s=e.userRemote)==null?void 0:s.override)!==void 0)return 4;if(((o=e.userLocal)==null?void 0:o.override)!==void 0)return 3}return((a=e.memory)==null?void 0:a.value)!==void 0?8:((c=e.workspaceFolder)==null?void 0:c.value)!==void 0?6:((h=e.workspace)==null?void 0:h.value)!==void 0?5:((l=e.userRemote)==null?void 0:l.value)!==void 0?4:3}_getValue(e,t,i){const r=e?this.getLanguage(e,t):void 0;return typeof i>"u"?this.configurationService.getValue({resource:e,overrideIdentifier:r}):this.configurationService.getValue(i,{resource:e,overrideIdentifier:r})}getLanguage(e,t){const i=this.modelService.getModel(e);return i?t?i.getLanguageIdAtPosition(t.lineNumber,t.column):i.getLanguageId():this.languageService.guessLanguageIdByFilepathOrFirstLine(e)}toResourceConfigurationChangeEvent(e){return{affectedKeys:e.affectedKeys,affectsConfiguration:(t,i)=>{const r=t?this.getLanguage(t,null):void 0;return e.affectsConfiguration(i,{resource:t,overrideIdentifier:r})}}}};Ue=M([f(0,Te),f(1,di),f(2,fi)],Ue);var it;(function(d){d[d.APPLICATION=1]="APPLICATION",d[d.MACHINE=2]="MACHINE",d[d.WINDOW=3]="WINDOW",d[d.RESOURCE=4]="RESOURCE",d[d.LANGUAGE_OVERRIDABLE=5]="LANGUAGE_OVERRIDABLE",d[d.MACHINE_OVERRIDABLE=6]="MACHINE_OVERRIDABLE"})(it||(it={}));class vr{constructor(e,t,i){this.donotCacheResourcesWithSchemes=e,this.fileService=i,this.cachedConfigurations=new Map,this.cacheHome=t.cacheHome}needsCaching(e){return!this.donotCacheResourcesWithSchemes.includes(e.scheme)}read(e){return this.getCachedConfiguration(e).read()}write(e,t){return this.getCachedConfiguration(e).save(t)}remove(e){return this.getCachedConfiguration(e).remove()}getCachedConfiguration({type:e,key:t}){const i=`${e}:${t}`;let r=this.cachedConfigurations.get(i);return r||(r=new mr({type:e,key:t},this.cacheHome,this.fileService),this.cachedConfigurations.set(i,r)),r}}class mr{constructor({type:e,key:t},i,r){this.fileService=r,this.cachedConfigurationFolderResource=q(i,"CachedConfigurations",e,t),this.cachedConfigurationFileResource=q(this.cachedConfigurationFolderResource,e==="workspaces"?"workspace.json":"configuration.json"),this.queue=new Ne}async read(){try{return(await this.fileService.readFile(this.cachedConfigurationFileResource)).value.toString()}catch{return""}}async save(e){await this.createCachedFolder()&&await this.queue.queue(async()=>{await this.fileService.writeFile(this.cachedConfigurationFileResource,ie.fromString(e))})}async remove(){try{await this.queue.queue(()=>this.fileService.del(this.cachedConfigurationFolderResource,{recursive:!0,useTrash:!1}))}catch(e){if(e.fileOperationResult!==1)throw e}}async createCachedFolder(){if(await this.fileService.exists(this.cachedConfigurationFolderResource))return!0;try{return await this.fileService.createFolder(this.cachedConfigurationFolderResource),!0}catch{return!1}}}const rt=/\//g,yr=/\$\{(scheme|authoritySuffix|authority|path|(query)\.(.+?))\}/g;function Wr(d){return!!(d&&d[2]===":")}const st=50;let Ae=class extends S{constructor(e,t,i,r,n,s){var a,c;super(),this.environmentService=e,this.contextService=t,this.pathService=i,this.remoteAgentService=r,this._onDidChangeFormatters=this._register(new k({leakWarningThreshold:400})),this.onDidChangeFormatters=this._onDidChangeFormatters.event,this.os=Je,this.userHome=i.defaultUriScheme===P.file?this.pathService.userHome({preferLocal:!0}):void 0;const o=this.storedFormattersMemento=new Ci("cachedResourceLabelFormatters2",n);this.storedFormatters=o.getMemento(0,1),this.formatters=((c=(a=this.storedFormatters)==null?void 0:a.formatters)==null?void 0:c.slice())||[],this.resolveRemoteEnvironment()}async resolveRemoteEnvironment(){const e=await this.remoteAgentService.getEnvironment();this.os=(e==null?void 0:e.os)??Je,this.userHome=await this.pathService.userHome()}findFormatting(e){let t;for(const i of this.formatters)if(i.scheme===e.scheme){if(!i.authority&&(!t||i.priority)){t=i;continue}if(!i.authority)continue;wi(i.authority.toLowerCase(),e.authority.toLowerCase())&&(!t||!t.authority||i.authority.length>t.authority.length||i.authority.length===t.authority.length&&i.priority)&&(t=i)}return t?t.formatting:void 0}getUriLabel(e,t={}){let i=this.findFormatting(e);i&&t.separator&&(i={...i,separator:t.separator});const r=this.doGetUriLabel(e,i,t);return!i&&t.separator?r.replace(rt,t.separator):r}doGetUriLabel(e,t,i={}){if(!t)return ki(e,{os:this.os,tildify:this.userHome?{userHome:this.userHome}:void 0,relative:i.relative?{noPrefix:i.noPrefix,getWorkspace:()=>this.contextService.getWorkspace(),getWorkspaceFolder:r=>this.contextService.getWorkspaceFolder(r)}:void 0});if(i.relative&&this.contextService){let r=this.contextService.getWorkspaceFolder(e);if(!r){const n=this.contextService.getWorkspace(),s=Wt(n.folders);s&&e.scheme!==s.uri.scheme&&e.path.startsWith(U.sep)&&(r=this.contextService.getWorkspaceFolder(s.uri.with({path:e.path})))}if(r){const n=this.formatUri(r.uri,t,i.noPrefix);let s=this.formatUri(e,t,i.noPrefix),o=0;for(;s[o]&&s[o]===n[o];)o++;if(!s[o]||s[o]===t.separator?s=s.substring(1+o):o===n.length&&r.uri.path===U.sep&&(s=s.substring(o)),this.contextService.getWorkspace().folders.length>1&&!i.noPrefix){const c=(r==null?void 0:r.name)??Si(r.uri);s=s?`${c} • ${s}`:c}return s}}return this.formatUri(e,t,i.noPrefix)}getUriBasenameLabel(e){const t=this.findFormatting(e),i=this.doGetUriLabel(e,t);let r;return(t==null?void 0:t.separator)===me.sep?r=me:(t==null?void 0:t.separator)===U.sep?r=U:r=this.os===1?me:U,r.basename(i)}getWorkspaceLabel(e,t){if(vi(e)){const i=_t(e);return he(i)||ee(i)?this.getWorkspaceLabel(i,t):""}return A.isUri(e)?this.doGetSingleFolderWorkspaceLabel(e,t):he(e)?this.doGetSingleFolderWorkspaceLabel(e.uri,t):ee(e)?this.doGetWorkspaceLabel(e.configPath,t):""}doGetWorkspaceLabel(e,t){if(De(e,this.environmentService))return u("untitledWorkspace","Untitled (Workspace)");if(ne(e))return u("temporaryWorkspace","Workspace");let i=le(e);i.endsWith(K)&&(i=i.substr(0,i.length-K.length-1));let r;switch(t==null?void 0:t.verbose){case 0:r=i;break;case 2:r=u("workspaceNameVerbose","{0} (Workspace)",this.getUriLabel(q(mi(e),i)));break;case 1:default:r=u("workspaceName","{0} (Workspace)",i);break}return(t==null?void 0:t.verbose)===0?r:this.appendWorkspaceSuffix(r,e)}doGetSingleFolderWorkspaceLabel(e,t){let i;switch(t==null?void 0:t.verbose){case 2:i=this.getUriLabel(e);break;case 0:case 1:default:i=le(e)||U.sep;break}return(t==null?void 0:t.verbose)===0?i:this.appendWorkspaceSuffix(i,e)}getSeparator(e,t){const i=this.findFormatting(A.from({scheme:e,authority:t}));return(i==null?void 0:i.separator)||U.sep}getHostLabel(e,t){const i=this.findFormatting(A.from({scheme:e,authority:t}));return(i==null?void 0:i.workspaceSuffix)||t||""}getHostTooltip(e,t){const i=this.findFormatting(A.from({scheme:e,authority:t}));return i==null?void 0:i.workspaceTooltip}registerCachedFormatter(e){var r;const t=(r=this.storedFormatters).formatters??(r.formatters=[]);let i=t.findIndex(n=>n.scheme===e.scheme&&n.authority===e.authority);if(i===-1&&t.length>=st&&(i=st-1),i===-1)t.unshift(e);else{for(let n=i;n>0;n--)t[n]=t[n-1];t[0]=e}return this.storedFormattersMemento.saveMemento(),this.registerFormatter(e)}registerFormatter(e){return this.formatters.push(e),this._onDidChangeFormatters.fire({scheme:e.scheme}),{dispose:()=>{this.formatters=this.formatters.filter(t=>t!==e),this._onDidChangeFormatters.fire({scheme:e.scheme})}}}formatUri(e,t,i){let r=t.label.replace(yr,(n,s,o,a)=>{switch(s){case"scheme":return e.scheme;case"authority":return e.authority;case"authoritySuffix":{const c=e.authority.indexOf("+");return c===-1?e.authority:e.authority.slice(c+1)}case"path":return t.stripPathStartingSeparator?e.path.slice(e.path[0]===t.separator?1:0):e.path;default:{if(o==="query"){const{query:c}=e;if(c&&c[0]==="{"&&c[c.length-1]==="}")try{return JSON.parse(c)[a]||""}catch{}}return""}}});return t.normalizeDriveLetter&&Wr(r)&&(r=r.charAt(1).toUpperCase()+r.substr(2)),t.tildify&&!i&&this.userHome&&(r=yi(r,this.userHome.fsPath,this.os)),t.authorityPrefix&&e.authority&&(r=t.authorityPrefix+r),r.replace(rt,t.separator)}appendWorkspaceSuffix(e,t){const i=this.findFormatting(t),r=i&&typeof i.workspaceSuffix=="string"?i.workspaceSuffix:void 0;return r?`${e} [${r}]`:e}};Ae=M([f(0,te),f(1,T),f(2,pi),f(3,mt),f(4,yt),f(5,Ct)],Ae);function _r(d){return{id:br(d),configPath:d}}function br(d){return gt(d.toString()).toString(16)}let ge=class X extends S{constructor(e,t,i,r,n,s){super(),this.storageService=e,this.contextService=t,this.logService=i,this.fileService=r,this.environmentService=n,this.uriIdentityService=s,this._onRecentlyOpenedChange=this._register(new k),this.onDidChangeRecentlyOpened=this._onRecentlyOpenedChange.event,this.addWorkspaceToRecentlyOpened(),this.registerListeners()}registerListeners(){this._register(this.storageService.onDidChangeValue(e=>this.onDidChangeStorage(e))),this._register(this.contextService.onDidChangeWorkspaceFolders(e=>this.onDidChangeWorkspaceFolders(e)))}onDidChangeStorage(e){e.key===X.RECENTLY_OPENED_KEY&&e.scope===-1&&this._onRecentlyOpenedChange.fire()}onDidChangeWorkspaceFolders(e){if(ne(this.contextService.getWorkspace()))for(const t of e.added)this.addRecentlyOpened([{folderUri:t.uri}])}addWorkspaceToRecentlyOpened(){const e=this.contextService.getWorkspace(),t=this.environmentService.remoteAuthority;switch(this.contextService.getWorkbenchState()){case 2:this.addRecentlyOpened([{folderUri:e.folders[0].uri,remoteAuthority:t}]);break;case 3:this.addRecentlyOpened([{workspace:{id:e.id,configPath:e.configuration},remoteAuthority:t}]);break}}async getRecentlyOpened(){const e=this.storageService.get(X.RECENTLY_OPENED_KEY,-1);if(e){const t=Wi(JSON.parse(e),this.logService);return t.workspaces=t.workspaces.filter(i=>!(ye(i)&&i.folderUri.scheme===P.file&&!ne(this.contextService.getWorkspace())||_i(i)&&ne(i.workspace.configPath))),t}return{workspaces:[],files:[]}}async addRecentlyOpened(e){const t=await this.getRecentlyOpened();for(const i of e)bi(i)?(this.doRemoveRecentlyOpened(t,[i.fileUri]),t.files.unshift(i)):ye(i)?(this.doRemoveRecentlyOpened(t,[i.folderUri]),t.workspaces.unshift(i)):(this.doRemoveRecentlyOpened(t,[i.workspace.configPath]),t.workspaces.unshift(i));return this.saveRecentlyOpened(t)}async removeRecentlyOpened(e){const t=await this.getRecentlyOpened();return this.doRemoveRecentlyOpened(t,e),this.saveRecentlyOpened(t)}doRemoveRecentlyOpened(e,t){e.files=e.files.filter(i=>!t.some(r=>r.toString()===i.fileUri.toString())),e.workspaces=e.workspaces.filter(i=>!t.some(r=>r.toString()===(ye(i)?i.folderUri.toString():i.workspace.configPath.toString())))}async saveRecentlyOpened(e){return this.storageService.store(X.RECENTLY_OPENED_KEY,JSON.stringify(Ri(e)),-1,0)}async clearRecentlyOpened(){this.storageService.remove(X.RECENTLY_OPENED_KEY,-1)}async enterWorkspace(e){return{workspace:await this.getWorkspaceIdentifier(e)}}async createUntitledWorkspace(e,t){const i=(Date.now()+Math.round(Math.random()*1e3)).toString(),r=q(this.environmentService.untitledWorkspacesHome,`Untitled-${i}.${K}`),n=[];if(e)for(const o of e)n.push(St(o.uri,!0,o.name,this.environmentService.untitledWorkspacesHome,this.uriIdentityService.extUri));const s={folders:n,remoteAuthority:t};return await this.fileService.writeFile(r,ie.fromString(JSON.stringify(s,null,"	"))),this.getWorkspaceIdentifier(r)}async deleteUntitledWorkspace(e){try{await this.fileService.del(e.configPath)}catch(t){if(t.fileOperationResult!==1)throw t}}async getWorkspaceIdentifier(e){return _r(e)}async getDirtyWorkspaces(){return[]}};ge.RECENTLY_OPENED_KEY="recently.opened";ge=M([f(0,yt),f(1,T),f(2,bt),f(3,I),f(4,te),f(5,pe)],ge);let xe=class{constructor(e,t,i,r,n,s,o,a,c,h,l,p,v,D,E,y){this.jsonEditingService=e,this.contextService=t,this.configurationService=i,this.notificationService=r,this.commandService=n,this.fileService=s,this.textFileService=o,this.workspacesService=a,this.environmentService=c,this.fileDialogService=h,this.dialogService=l,this.hostService=p,this.uriIdentityService=v,this.workspaceTrustManagementService=D,this.userDataProfilesService=E,this.userDataProfileService=y}async pickNewWorkspacePath(){const e=[P.file];this.environmentService.remoteAuthority&&e.unshift(P.vscodeRemote);let t=await this.fileDialogService.showSaveDialog({saveLabel:Ii(u("save","Save")),title:u("saveWorkspace","Save Workspace"),filters:Oi,defaultUri:q(await this.fileDialogService.defaultWorkspacePath(),this.getNewWorkspaceName()),availableFileSystems:e});if(t)return Ui(t)||(t=t.with({path:`${t.path}.${K}`})),t}getNewWorkspaceName(){var i;const e=(i=this.getCurrentWorkspaceIdentifier())==null?void 0:i.configPath;if(e&&Ai(e,this.environmentService))return le(e);const t=Wt(this.contextService.getWorkspace().folders);return t?`${le(t.uri)}.${K}`:`workspace.${K}`}async updateFolders(e,t,i,r){const n=this.contextService.getWorkspace().folders;let s=[];typeof t=="number"&&(s=n.slice(e,e+t).map(h=>h.uri));let o=[];Array.isArray(i)&&(o=i.map(h=>({uri:Ye(h.uri),name:h.name})));const a=s.length>0,c=o.length>0;if(!(!c&&!a))return c&&!a?this.doAddFolders(o,e,r):a&&!c?this.removeFolders(s):this.includesSingleFolderWorkspace(s)?this.createAndEnterWorkspace(o):this.contextService.getWorkbenchState()!==3?this.doAddFolders(o,e,r):this.doUpdateFolders(o,s,e,r)}async doUpdateFolders(e,t,i,r=!1){try{await this.contextService.updateFolders(e,t,i)}catch(n){if(r)throw n;this.handleWorkspaceConfigurationEditingError(n)}}addFolders(e,t=!1){const i=e.map(r=>({uri:Ye(r.uri),name:r.name}));return this.doAddFolders(i,void 0,t)}async doAddFolders(e,t,i=!1){const r=this.contextService.getWorkbenchState(),n=this.environmentService.remoteAuthority;if(n&&(e=e.filter(s=>s.uri.scheme!==P.file&&(s.uri.scheme!==P.vscodeRemote||xi(s.uri.authority,n)))),r!==3){let s=this.contextService.getWorkspace().folders.map(o=>({uri:o.uri}));return s.splice(typeof t=="number"?t:s.length,0,...e),s=ue(s,o=>this.uriIdentityService.extUri.getComparisonKey(o.uri)),r===1&&s.length===0||r===2&&s.length===1?void 0:this.createAndEnterWorkspace(s)}try{await this.contextService.addFolders(e,t)}catch(s){if(i)throw s;this.handleWorkspaceConfigurationEditingError(s)}}async removeFolders(e,t=!1){if(this.includesSingleFolderWorkspace(e))return this.createAndEnterWorkspace([]);try{await this.contextService.removeFolders(e)}catch(i){if(t)throw i;this.handleWorkspaceConfigurationEditingError(i)}}includesSingleFolderWorkspace(e){if(this.contextService.getWorkbenchState()===2){const t=this.contextService.getWorkspace().folders[0];return e.some(i=>this.uriIdentityService.extUri.isEqual(i,t.uri))}return!1}async createAndEnterWorkspace(e,t){if(t&&!await this.isValidTargetWorkspacePath(t))return;const i=this.environmentService.remoteAuthority,r=await this.workspacesService.createUntitledWorkspace(e,i);if(t)try{await this.saveWorkspaceAs(r,t)}finally{await this.workspacesService.deleteUntitledWorkspace(r)}else t=r.configPath,this.userDataProfileService.currentProfile.isDefault||await this.userDataProfilesService.setProfileForWorkspace(r,this.userDataProfileService.currentProfile);return this.enterWorkspace(t)}async saveAndEnterWorkspace(e){const t=this.getCurrentWorkspaceIdentifier();if(t){if(Mi(t.configPath,e))return this.saveWorkspace(t);if(await this.isValidTargetWorkspacePath(e))return await this.saveWorkspaceAs(t,e),this.enterWorkspace(e)}}async isValidTargetWorkspacePath(e){return!0}async saveWorkspaceAs(e,t){const i=e.configPath;if(!De(t,this.environmentService)&&!this.userDataProfileService.currentProfile.isDefault){const a=await this.workspacesService.getWorkspaceIdentifier(t);await this.userDataProfilesService.setProfileForWorkspace(a,this.userDataProfileService.currentProfile)}if(this.uriIdentityService.extUri.isEqual(i,t))return;const n=De(i,this.environmentService),s=await this.fileService.readFile(i),o=Xe(s.value.toString(),i,n,t,this.uriIdentityService.extUri);await this.textFileService.create([{resource:t,value:o,options:{overwrite:!0}}]),await this.trustWorkspaceConfiguration(t)}async saveWorkspace(e){const t=e.configPath,i=this.textFileService.files.get(t);if(i){await i.save({force:!0,reason:1});return}if(await this.fileService.exists(t))return;const s=Xe(JSON.stringify({folders:[]},null,"	"),t,!1,t,this.uriIdentityService.extUri);await this.textFileService.create([{resource:t,value:s}])}handleWorkspaceConfigurationEditingError(e){switch(e.code){case 0:this.onInvalidWorkspaceConfigurationFileError();break;default:this.notificationService.error(e.message)}}onInvalidWorkspaceConfigurationFileError(){const e=u("errorInvalidTaskConfiguration","Unable to write into workspace configuration file. Please open the file to correct errors/warnings in it and try again.");this.askToOpenWorkspaceConfigurationFile(e)}askToOpenWorkspaceConfigurationFile(e){this.notificationService.prompt(Y.Error,e,[{label:u("openWorkspaceConfigurationFile","Open Workspace Configuration"),run:()=>this.commandService.executeCommand("workbench.action.openWorkspaceConfigFile")}])}async doEnterWorkspace(e){if(this.environmentService.extensionTestsLocationURI)throw new Error("Entering a new workspace is not possible in tests.");const t=await this.workspacesService.getWorkspaceIdentifier(e);return this.contextService.getWorkbenchState()===2&&await this.migrateWorkspaceSettings(t),await this.configurationService.initialize(t),this.workspacesService.enterWorkspace(e)}migrateWorkspaceSettings(e){return this.doCopyWorkspaceSettings(e,t=>t.scope===3)}copyWorkspaceSettings(e){return this.doCopyWorkspaceSettings(e)}doCopyWorkspaceSettings(e,t){const i=W.as(F.Configuration).getConfigurationProperties(),r={};for(const n of this.configurationService.keys().workspace)if(i[n]){if(t&&!t(i[n]))continue;r[n]=this.configurationService.inspect(n).workspaceValue}return this.jsonEditingService.write(e.configPath,[{path:["settings"],value:r}],!0)}async trustWorkspaceConfiguration(e){this.contextService.getWorkbenchState()!==1&&this.workspaceTrustManagementService.isWorkspaceTrusted()&&await this.workspaceTrustManagementService.setUrisTrust([e],!0)}getCurrentWorkspaceIdentifier(){const e=_t(this.contextService.getWorkspace());if(ee(e))return e}};xe=M([f(0,vt),f(1,T),f(2,ar),f(3,ut),f(4,Di),f(5,I),f(6,ct),f(7,Rt),f(8,te),f(9,Pi),f(10,Fi),f(11,Ei),f(12,pe),f(13,pt),f(14,B),f(15,Le)],xe);const Rr=W.as(wt.JSONContribution),ae=W.as(F.Configuration),nt={type:"object",defaultSnippets:[{body:{title:"",properties:{}}}],properties:{title:{description:u("vscode.extension.contributes.configuration.title","A title for the current category of settings. This label will be rendered in the Settings editor as a subheading. If the title is the same as the extension display name, then the category will be grouped under the main extension heading."),type:"string"},order:{description:u("vscode.extension.contributes.configuration.order","When specified, gives the order of this category of settings relative to other categories."),type:"integer"},properties:{description:u("vscode.extension.contributes.configuration.properties","Description of the configuration properties."),type:"object",propertyNames:{pattern:"\\S+",patternErrorMessage:u("vscode.extension.contributes.configuration.property.empty","Property should not be empty.")},additionalProperties:{anyOf:[{title:u("vscode.extension.contributes.configuration.properties.schema","Schema of the configuration property."),$ref:"http://json-schema.org/draft-07/schema#"},{type:"object",properties:{scope:{type:"string",enum:["application","machine","window","resource","language-overridable","machine-overridable"],default:"window",enumDescriptions:[u("scope.application.description","Configuration that can be configured only in the user settings."),u("scope.machine.description","Configuration that can be configured only in the user settings or only in the remote settings."),u("scope.window.description","Configuration that can be configured in the user, remote or workspace settings."),u("scope.resource.description","Configuration that can be configured in the user, remote, workspace or folder settings."),u("scope.language-overridable.description","Resource configuration that can be configured in language specific settings."),u("scope.machine-overridable.description","Machine configuration that can be configured also in workspace or folder settings.")],markdownDescription:u("scope.description","Scope in which the configuration is applicable. Available scopes are `application`, `machine`, `window`, `resource`, and `machine-overridable`.")},enumDescriptions:{type:"array",items:{type:"string"},description:u("scope.enumDescriptions","Descriptions for enum values")},markdownEnumDescriptions:{type:"array",items:{type:"string"},description:u("scope.markdownEnumDescriptions","Descriptions for enum values in the markdown format.")},enumItemLabels:{type:"array",items:{type:"string"},markdownDescription:u("scope.enumItemLabels","Labels for enum values to be displayed in the Settings editor. When specified, the {0} values still show after the labels, but less prominently.","`enum`")},markdownDescription:{type:"string",description:u("scope.markdownDescription","The description in the markdown format.")},deprecationMessage:{type:"string",description:u("scope.deprecationMessage","If set, the property is marked as deprecated and the given message is shown as an explanation.")},markdownDeprecationMessage:{type:"string",description:u("scope.markdownDeprecationMessage","If set, the property is marked as deprecated and the given message is shown as an explanation in the markdown format.")},editPresentation:{type:"string",enum:["singlelineText","multilineText"],enumDescriptions:[u("scope.singlelineText.description","The value will be shown in an inputbox."),u("scope.multilineText.description","The value will be shown in a textarea.")],default:"singlelineText",description:u("scope.editPresentation","When specified, controls the presentation format of the string setting.")},order:{type:"integer",description:u("scope.order","When specified, gives the order of this setting relative to other settings within the same category. Settings with an order property will be placed before settings without this property set.")},ignoreSync:{type:"boolean",description:u("scope.ignoreSync","When enabled, Settings Sync will not sync the user value of this configuration by default.")}}}]}}}};let m;const Et=Dt.registerExtensionPoint({extensionPoint:"configurationDefaults",jsonSchema:{$ref:kt}});Et.setHandler((d,{added:e,removed:t})=>{m&&ae.deltaConfiguration(m);const i=m={};if(queueMicrotask(()=>{m===i&&(ae.deltaConfiguration(m),m=void 0)}),t.length){const r=t.map(n=>({overrides:Pe(n.value),source:{id:n.description.identifier.value,displayName:n.description.displayName}}));m.removedDefaults=r}if(e.length){const r=ae.getConfigurationProperties(),n=[6,3,4,5],s=e.map(o=>{const a=Pe(o.value);for(const c of Object.keys(a))if(!Q.test(c)){const h=r[c];h!=null&&h.scope&&!n.includes(h.scope)&&(o.collector.warn(u("config.property.defaultConfiguration.warning","Cannot register configuration defaults for '{0}'. Only defaults for machine-overridable, window, resource and language overridable scoped settings are supported.",c)),delete a[c])}return{overrides:a,source:{id:o.description.identifier.value,displayName:o.description.displayName}}});m.addedDefaults=s}});const Dr=Dt.registerExtensionPoint({extensionPoint:"configuration",deps:[Et],jsonSchema:{description:u("vscode.extension.contributes.configuration","Contributes configuration settings."),oneOf:[nt,{type:"array",items:nt}]}}),Re=new Ti;Dr.setHandler((d,{added:e,removed:t})=>{if(m??(m={}),t.length){const s=[];for(const o of t)s.push(...Re.get(o.description.identifier)||[]),Re.delete(o.description.identifier);m.removedConfigurations=s}const i=new Set;function r(s,o){var h,l,p;const a=[],c=Pe(s);return c.title&&typeof c.title!="string"&&o.collector.error(u("invalid.title","'configuration.title' must be a string")),n(c,o),c.id=s.id||o.description.identifier.value,c.extensionInfo={id:o.description.identifier.value,displayName:o.description.displayName},c.restrictedProperties=((l=(h=o.description.capabilities)==null?void 0:h.untrustedWorkspaces)==null?void 0:l.supported)==="limited"?(p=o.description.capabilities)==null?void 0:p.untrustedWorkspaces.restrictedConfigurations:void 0,c.title=c.title||o.description.displayName||o.description.identifier.value,a.push(c),a}function n(s,o){const a=s.properties;if(a){typeof a!="object"&&(o.collector.error(u("invalid.properties","'configuration.properties' must be an object")),s.properties={});for(const h in a){const l=a[h],p=Li(h,l);if(p){delete a[h],o.collector.warn(p);continue}if(i.has(h)){delete a[h],o.collector.warn(u("config.property.duplicate","Cannot register '{0}'. This property is already registered.",h));continue}if(!lt(l)){delete a[h],o.collector.error(u("invalid.property","configuration.properties property '{0}' must be an object",h));continue}i.add(h),l.scope?l.scope.toString()==="application"?l.scope=1:l.scope.toString()==="machine"?l.scope=2:l.scope.toString()==="resource"?l.scope=4:l.scope.toString()==="machine-overridable"?l.scope=6:l.scope.toString()==="language-overridable"?l.scope=5:l.scope=3:l.scope=3}}const c=s.allOf;if(c){o.collector.error(u("invalid.allOf","'configuration.allOf' is deprecated and should no longer be used. Instead, pass multiple configuration sections as an array to the 'configuration' contribution point."));for(const h of c)n(h,o)}}if(e.length){const s=[];for(const o of e){const a=[],c=o.value;Array.isArray(c)?c.forEach(h=>a.push(...r(h,o))):a.push(...r(c,o)),Re.set(o.description.identifier,a),s.push(...a)}m.addedConfigurations=s}ae.deltaConfiguration(m),m=void 0});Rr.registerSchema("vscode://schemas/workspaceConfig",{allowComments:!0,allowTrailingCommas:!0,default:{folders:[{path:""}],settings:{}},required:["folders"],properties:{folders:{minItems:0,uniqueItems:!0,description:u("workspaceConfig.folders.description","List of folders to be loaded in the workspace."),items:{type:"object",defaultSnippets:[{body:{path:"$1"}}],oneOf:[{properties:{path:{type:"string",description:u("workspaceConfig.path.description","A file path. e.g. `/root/folderA` or `./folderA` for a relative path that will be resolved against the location of the workspace file.")},name:{type:"string",description:u("workspaceConfig.name.description","An optional name for the folder. ")}},required:["path"]},{properties:{uri:{type:"string",description:u("workspaceConfig.uri.description","URI of the folder")},name:{type:"string",description:u("workspaceConfig.name.description","An optional name for the folder. ")}},required:["uri"]}]}},settings:{type:"object",default:{},description:u("workspaceConfig.settings.description","Workspace settings"),$ref:Ee},launch:{type:"object",default:{configurations:[],compounds:[]},description:u("workspaceConfig.launch.description","Workspace launch configurations"),$ref:cr},tasks:{type:"object",default:{version:"2.0.0",tasks:[]},description:u("workspaceConfig.tasks.description","Workspace task configurations"),$ref:ur},extensions:{type:"object",default:{},description:u("workspaceConfig.extensions.description","Workspace extensions"),$ref:"vscode://schemas/extensions"},remoteAuthority:{type:"string",doNotSuggest:!0,description:u("workspaceConfig.remoteAuthority","The remote server where the workspace is located.")},transient:{type:"boolean",doNotSuggest:!0,description:u("workspaceConfig.transient","A transient workspace will disappear when restarting or reloading.")}},errorMessage:u("unknownWorkspaceProperty","Unknown workspace configuration property")});async function Tr(d){const e=H.get(B);await H.get(I).writeFile(e.defaultProfile.settingsResource,ie.fromString(d))}async function Lr(){const d=H.get(B);return(await H.get(I).readFile(d.defaultProfile.settingsResource)).value.toString()}function Nr(d){const e=H.get(B);return H.get(I).onDidFilesChange(t=>{t.affects(e.defaultProfile.settingsResource)&&d()})}const zr=W.as(F.Configuration);let Me=class extends kr{constructor(e,t,i,r,n,s,o,a){const c=new vr([P.file,P.vscodeUserData,P.tmp],e,r);super({configurationCache:c},e,t,i,r,n,s,o,a)}};Me=M([f(0,te),f(1,Le),f(2,B),f(3,I),f(4,mt),f(5,pe),f(6,bt),f(7,Ni)],Me);class Pr extends xe{constructor(){super(...arguments),this.enterWorkspace=qi}}let ce=A.file("/workspace");Hi(async d=>{const e=d.get(T);e.acquireInstantiationService(d.get(Bi));const t=ce.with({path:"/workspace.code-workspace"});try{const i=d.get(I);await i.createFolder(ce),await i.writeFile(t,ie.fromString(JSON.stringify({folders:[{path:ce.path}]})))}catch{}await e.initialize({id:Gi(),configPath:t})});const ot=zi(Me);function Vr(d){return ce=d,{...ji(),[Vi.toString()]:new j(Ae,void 0,!0),[Te.toString()]:new j(ot),[T.toString()]:new j(ot),[Ki.toString()]:new j(Ue),[$i.toString()]:new j(Pr),[Rt.toString()]:new j(ge,void 0,!0)}}export{it as ConfigurationScope,zr as configurationRegistry,Vr as default,Lr as getUserConfiguration,Nr as onUserConfigurationChange,Tr as updateUserConfiguration};
