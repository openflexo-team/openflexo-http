import{aP as E,_ as x,a as c,cx as M,aS as T,a1 as R,e as D,X as _,bO as L,O as H,bD as b,aQ as k,dx as N,bM as O,aT as K,jK as q,yZ as w,y_ as G,xV as Y,kf as Q,B as m,qX as V,av as X,bj as $,sa as B,dw as F,aH as W,bY as U,y5 as j,ak as f,dW as z,bz as Z,N as J,y$ as A,aU as ee}from"./index-1e6bb64c.js";const te=E("chatWidgetService");let S=class v extends G{get activeTextEditorControl(){return this.editorService.activeTextEditorControl}get defaultFilterValue(){if(this.configuration.preserveInput)return Y.LAST}constructor(e,i,o,n,l,a,t,r,d,u,s,g,I,P){super({showAlias:!Q.isDefaultVariant(),noResultsPick:C=>{const y=this.chatService.getProviderInfos()[0];return y?{label:m("askXInChat","Ask {0}: {1}",y.displayName,C),commandId:h.ID,accept:()=>a.executeCommand(h.ID,C)}:{label:m("noCommandResults","No matching commands"),commandId:""}}},n,l,a,t,r),this.editorService=e,this.menuService=i,this.extensionService=o,this.configurationService=d,this.editorGroupService=u,this.preferencesService=s,this.productService=g,this.semanticSimilarityService=I,this.chatService=P,this.extensionRegistrationRace=V(this.extensionService.whenInstalledExtensionsRegistered(),800),this.useSemanticSimilarity=!1,this._register(d.onDidChangeConfiguration(C=>this.updateOptions(C))),this.updateOptions()}get configuration(){const e=this.configurationService.getValue().workbench.commandPalette;return{preserveInput:e.preserveInput,experimental:e.experimental}}updateOptions(e){var n;if(e&&!e.affectsConfiguration("workbench.commandPalette.experimental"))return;const i=this.configuration,o=i.experimental.suggestCommands&&((n=this.productService.commandPaletteSuggestedCommandIds)!=null&&n.length)?new Set(this.productService.commandPaletteSuggestedCommandIds):void 0;this.options.suggestedCommandIds=o,this.useSemanticSimilarity=i.experimental.useSemanticSimilarity}async getCommandPicks(e){return await this.extensionRegistrationRace,e.isCancellationRequested?[]:[...this.getCodeEditorCommandPicks(),...this.getGlobalCommandPicks()].map(i=>({...i,buttons:[{iconClass:X.asClassName($.gear),tooltip:m("configure keybinding","Configure Keybinding")}],trigger:()=>(this.preferencesService.openGlobalKeybindingSettings(!1,{query:`@command:${i.commandId}`}),B.CLOSE_PICKER)}))}hasAdditionalCommandPicks(e,i){return!(!this.useSemanticSimilarity||e===""||i.isCancellationRequested||!this.semanticSimilarityService.isEnabled())}async getAdditionalCommandPicks(e,i,o,n){if(!this.hasAdditionalCommandPicks(o,n))return[];const l=e.map(s=>s.commandId);let a;try{await F(v.SEMANTIC_SIMILARITY_DEBOUNCE,n),a=await this.semanticSimilarityService.getSimilarityScore(o,l,n)}catch{return[]}if(n.isCancellationRequested)return[];const t=a.map((s,g)=>g).sort((s,g)=>a[g]-a[s]),r=new Set(i.map(s=>s.commandId)),d=i.length>0?[{type:"separator",label:m("semanticSimilarity","similar commands")}]:[];let u=0;for(const s of t){if(a[s]<v.SEMANTIC_SIMILARITY_THRESHOLD||u===v.SEMANTIC_SIMILARITY_MAX_PICKS)break;const I=e[s];r.has(I.commandId)||(d.push(I),u++)}return d}getGlobalCommandPicks(){var l,a;const e=[],i=((l=this.editorService.activeEditorPane)==null?void 0:l.scopedContextKeyService)||this.editorGroupService.activeGroup.scopedContextKeyService,o=this.menuService.createMenu(W.CommandPalette,i),n=o.getActions().reduce((t,[,r])=>[...t,...r],[]).filter(t=>t instanceof U&&t.enabled);for(const t of n){let r=(typeof t.item.title=="string"?t.item.title:t.item.title.value)||t.item.id;const d=typeof t.item.category=="string"?t.item.category:(a=t.item.category)==null?void 0:a.value;d&&(r=m("commandWithCategory","{0}: {1}",d,r));const u=typeof t.item.title!="string"?t.item.title.original:void 0,s=d&&t.item.category&&typeof t.item.category!="string"?t.item.category.original:void 0,g=u&&d?s?`${s}: ${u}`:`${d}: ${u}`:u;e.push({commandId:t.item.id,commandAlias:g,label:j(r)})}return o.dispose(),e}};S.SEMANTIC_SIMILARITY_MAX_PICKS=3;S.SEMANTIC_SIMILARITY_THRESHOLD=.8;S.SEMANTIC_SIMILARITY_DEBOUNCE=200;S=x([c(0,M),c(1,T),c(2,R),c(3,D),c(4,_),c(5,L),c(6,H),c(7,b),c(8,k),c(9,N),c(10,O),c(11,K),c(12,q),c(13,w)],S);class p extends f{constructor(){super({id:p.ID,title:{value:m("showTriggerActions","Show All Commands"),original:"Show All Commands"},keybinding:{weight:200,when:void 0,primary:z?void 0:3118,secondary:[59]},f1:!0})}async run(e){e.get(Z).quickAccess.show(S.PREFIX)}}p.ID="workbench.action.showCommands";class ne extends f{constructor(){super({id:"workbench.action.clearCommandHistory",title:{value:m("clearCommandHistory","Clear Command History"),original:"Clear Command History"},f1:!0})}async run(e){const i=e.get(k),o=e.get(J),n=e.get(b);if(A.getConfiguredCommandHistoryLength(i)>0){const{confirmed:a}=await n.confirm({type:"warning",message:m("confirmClearMessage","Do you want to clear the history of recently used commands?"),detail:m("confirmClearDetail","This action is irreversible!"),primaryButton:m({key:"clearButtonLabel",comment:["&& denotes a mnemonic"]},"&&Clear")});if(!a)return;A.clearHistory(i,o)}}}class h extends f{constructor(){super({id:h.ID,title:{value:m("askInChat","Ask In Chat"),original:"Ask In Chat"},f1:!1})}async run(e,i){const o=e.get(w),n=e.get(te),l=e.get(ee);if(!i)throw new Error("No filter provided.");let a;const t=o.getProviderInfos();switch(t.length){case 0:throw new Error("No chat provider found.");case 1:a=t[0].id;break;default:l.warn("Multiple chat providers found. Using the first one."),a=t[0].id;break}const r=await n.revealViewForProvider(a);r!=null&&r.viewModel&&o.sendRequestToProvider(r.viewModel.sessionId,{message:i})}}h.ID="workbench.action.askCommandInChat";export{S as C,p as S,ne as a};
